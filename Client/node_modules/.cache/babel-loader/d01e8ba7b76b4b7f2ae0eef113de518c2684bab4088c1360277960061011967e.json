{"ast":null,"code":"import { PieceType, TeamType } from \"../components/chessboard\";\nexport default class Referee {\n  // Function isOccupied\n  tileIsOccupied(x, y, boardState) {\n    console.log(\"checking\");\n    const piece = boardState.find(p => p.x === x && p.y === y);\n    if (piece) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  // Function move pawn\n  isValidMove(px, py, x, y, type, team, boardState) {\n    // Pawns Valid Moves\n\n    if (type === PieceType.PAWN) {\n      const specialRow = team === TeamType.OUR ? 1 : 6;\n      const pawnDirection = team === TeamType.OUR ? 1 : -1;\n      if (px === x && py === specialRow && y - py === 2 * pawnDirection) {\n        if (!this.tileIsOccupied(x, y, boardState) && !this.tileIsOccupied(x, y - pawnDirection, boardState)) {\n          return true;\n        }\n      } else if (px === x && y - py === 1 * pawnDirection) {\n        if (!this.tileIsOccupied(x, y, boardState)) {\n          return true;\n        }\n      }\n      return false;\n    }\n  }\n}","map":{"version":3,"names":["PieceType","TeamType","Referee","tileIsOccupied","x","y","boardState","console","log","piece","find","p","isValidMove","px","py","type","team","PAWN","specialRow","OUR","pawnDirection"],"sources":["/home/ahmed-bashir/React-projects/chess/src/referee/Referee.ts"],"sourcesContent":["import { PieceType, TeamType, Piece } from \"../components/chessboard\";\n\nexport default class Referee {\n  // Function isOccupied\n  tileIsOccupied(x: number, y: number, boardState: Piece[]): boolean {\n    console.log(\"checking\");\n    const piece = boardState.find((p) => p.x === x && p.y === y);\n\n    if (piece) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  // Function move pawn\n  isValidMove(\n    px: number,\n    py: number,\n    x: number,\n    y: number,\n    type: PieceType,\n    team: TeamType,\n    boardState: Piece[]\n  ) {\n    // Pawns Valid Moves\n\n    if (type === PieceType.PAWN) {\n      const specialRow = team === TeamType.OUR ? 1 : 6;\n      const pawnDirection = team === TeamType.OUR ? 1 : -1;\n\n      if (px === x && py === specialRow && y - py === 2 * pawnDirection) {\n        if (\n          !this.tileIsOccupied(x, y, boardState) &&\n          !this.tileIsOccupied(x, y - pawnDirection, boardState)\n        ) {\n          return true;\n        }\n      } else if (px === x && y - py === 1 * pawnDirection) {\n        if (!this.tileIsOccupied(x, y, boardState)) {\n          return true;\n        }\n      }\n      return false;\n    }\n  }\n}\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAe,0BAA0B;AAErE,eAAe,MAAMC,OAAO,CAAC;EAC3B;EACAC,cAAcA,CAACC,CAAS,EAAEC,CAAS,EAAEC,UAAmB,EAAW;IACjEC,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;IACvB,MAAMC,KAAK,GAAGH,UAAU,CAACI,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACP,CAAC,KAAKA,CAAC,IAAIO,CAAC,CAACN,CAAC,KAAKA,CAAC,CAAC;IAE5D,IAAII,KAAK,EAAE;MACT,OAAO,IAAI;IACb,CAAC,MAAM;MACL,OAAO,KAAK;IACd;EACF;;EAEA;EACAG,WAAWA,CACTC,EAAU,EACVC,EAAU,EACVV,CAAS,EACTC,CAAS,EACTU,IAAe,EACfC,IAAc,EACdV,UAAmB,EACnB;IACA;;IAEA,IAAIS,IAAI,KAAKf,SAAS,CAACiB,IAAI,EAAE;MAC3B,MAAMC,UAAU,GAAGF,IAAI,KAAKf,QAAQ,CAACkB,GAAG,GAAG,CAAC,GAAG,CAAC;MAChD,MAAMC,aAAa,GAAGJ,IAAI,KAAKf,QAAQ,CAACkB,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;MAEpD,IAAIN,EAAE,KAAKT,CAAC,IAAIU,EAAE,KAAKI,UAAU,IAAIb,CAAC,GAAGS,EAAE,KAAK,CAAC,GAAGM,aAAa,EAAE;QACjE,IACE,CAAC,IAAI,CAACjB,cAAc,CAACC,CAAC,EAAEC,CAAC,EAAEC,UAAU,CAAC,IACtC,CAAC,IAAI,CAACH,cAAc,CAACC,CAAC,EAAEC,CAAC,GAAGe,aAAa,EAAEd,UAAU,CAAC,EACtD;UACA,OAAO,IAAI;QACb;MACF,CAAC,MAAM,IAAIO,EAAE,KAAKT,CAAC,IAAIC,CAAC,GAAGS,EAAE,KAAK,CAAC,GAAGM,aAAa,EAAE;QACnD,IAAI,CAAC,IAAI,CAACjB,cAAc,CAACC,CAAC,EAAEC,CAAC,EAAEC,UAAU,CAAC,EAAE;UAC1C,OAAO,IAAI;QACb;MACF;MACA,OAAO,KAAK;IACd;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}