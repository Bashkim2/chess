{"ast":null,"code":"import{copyPosition}from\"../helpful/helper\";export var movePiece=function movePiece(_ref){var position=_ref.position,piece=_ref.piece,rank=_ref.rank,file=_ref.file,x=_ref.x,y=_ref.y;var newPosition=copyPosition(position);if(piece.endsWith('k')&&Math.abs(y-file)>1){// Castles\nif(y===2){// Castles Long\nnewPosition[rank][0]='';newPosition[rank][3]=piece.startsWith('w')?'wr':'br';}if(y===6){// Castles Short\nnewPosition[rank][7]='';newPosition[rank][5]=piece.startsWith('w')?'wr':'br';}}newPosition[rank][file]='';newPosition[x][y]=piece;return newPosition;};export var movePawn=function movePawn(_ref2){var position=_ref2.position,piece=_ref2.piece,rank=_ref2.rank,file=_ref2.file,x=_ref2.x,y=_ref2.y;var newPosition=copyPosition(position);// EnPassant, looks like capturing an empty cell\n// Detect and delete the pawn to be removed\nif(!newPosition[x][y]&&x!==rank&&y!==file)newPosition[rank][y]='';newPosition[rank][file]='';newPosition[x][y]=piece;return newPosition;};","map":{"version":3,"names":["copyPosition","movePiece","_ref","position","piece","rank","file","x","y","newPosition","endsWith","Math","abs","startsWith","movePawn","_ref2"],"sources":["/home/ahmed-bashir/React-projects/chess/src/arbiter/move.js"],"sourcesContent":["import { copyPosition } from \"../helpful/helper\"\n\n\nexport const movePiece = ({position,piece,rank,file,x,y}) => {\n\n    const newPosition = copyPosition(position)\n\n    if(piece.endsWith('k') && Math.abs(y - file) > 1){ // Castles\n        if (y === 2){ // Castles Long\n            newPosition[rank][0] = ''\n            newPosition[rank][3] = piece.startsWith('w') ? 'wr' : 'br'\n        }\n        if (y === 6){ // Castles Short\n            newPosition[rank][7] = ''\n            newPosition[rank][5] = piece.startsWith('w') ? 'wr' : 'br'\n        }\n    }\n    \n    newPosition[rank][file] = ''\n    newPosition[x][y] = piece\n    return newPosition\n}\n\nexport const movePawn = ({position,piece,rank,file,x,y}) => {\n    const newPosition = copyPosition(position)\n\n    // EnPassant, looks like capturing an empty cell\n    // Detect and delete the pawn to be removed\n    if (!newPosition[x][y] && x !== rank && y !== file) \n        newPosition[rank][y] = ''\n\n    newPosition[rank][file] = ''\n    newPosition[x][y] = piece\n    return newPosition\n}"],"mappings":"AAAA,OAASA,YAAY,KAAQ,mBAAmB,CAGhD,MAAO,IAAM,CAAAC,SAAS,CAAG,QAAZ,CAAAA,SAASA,CAAAC,IAAA,CAAuC,IAAlC,CAAAC,QAAQ,CAAAD,IAAA,CAARC,QAAQ,CAACC,KAAK,CAAAF,IAAA,CAALE,KAAK,CAACC,IAAI,CAAAH,IAAA,CAAJG,IAAI,CAACC,IAAI,CAAAJ,IAAA,CAAJI,IAAI,CAACC,CAAC,CAAAL,IAAA,CAADK,CAAC,CAACC,CAAC,CAAAN,IAAA,CAADM,CAAC,CAEnD,GAAM,CAAAC,WAAW,CAAGT,YAAY,CAACG,QAAQ,CAAC,CAE1C,GAAGC,KAAK,CAACM,QAAQ,CAAC,GAAG,CAAC,EAAIC,IAAI,CAACC,GAAG,CAACJ,CAAC,CAAGF,IAAI,CAAC,CAAG,CAAC,CAAC,CAAE;AAC/C,GAAIE,CAAC,GAAK,CAAC,CAAC,CAAE;AACVC,WAAW,CAACJ,IAAI,CAAC,CAAC,CAAC,CAAC,CAAG,EAAE,CACzBI,WAAW,CAACJ,IAAI,CAAC,CAAC,CAAC,CAAC,CAAGD,KAAK,CAACS,UAAU,CAAC,GAAG,CAAC,CAAG,IAAI,CAAG,IAAI,CAC9D,CACA,GAAIL,CAAC,GAAK,CAAC,CAAC,CAAE;AACVC,WAAW,CAACJ,IAAI,CAAC,CAAC,CAAC,CAAC,CAAG,EAAE,CACzBI,WAAW,CAACJ,IAAI,CAAC,CAAC,CAAC,CAAC,CAAGD,KAAK,CAACS,UAAU,CAAC,GAAG,CAAC,CAAG,IAAI,CAAG,IAAI,CAC9D,CACJ,CAEAJ,WAAW,CAACJ,IAAI,CAAC,CAACC,IAAI,CAAC,CAAG,EAAE,CAC5BG,WAAW,CAACF,CAAC,CAAC,CAACC,CAAC,CAAC,CAAGJ,KAAK,CACzB,MAAO,CAAAK,WAAW,CACtB,CAAC,CAED,MAAO,IAAM,CAAAK,QAAQ,CAAG,QAAX,CAAAA,QAAQA,CAAAC,KAAA,CAAuC,IAAlC,CAAAZ,QAAQ,CAAAY,KAAA,CAARZ,QAAQ,CAACC,KAAK,CAAAW,KAAA,CAALX,KAAK,CAACC,IAAI,CAAAU,KAAA,CAAJV,IAAI,CAACC,IAAI,CAAAS,KAAA,CAAJT,IAAI,CAACC,CAAC,CAAAQ,KAAA,CAADR,CAAC,CAACC,CAAC,CAAAO,KAAA,CAADP,CAAC,CAClD,GAAM,CAAAC,WAAW,CAAGT,YAAY,CAACG,QAAQ,CAAC,CAE1C;AACA;AACA,GAAI,CAACM,WAAW,CAACF,CAAC,CAAC,CAACC,CAAC,CAAC,EAAID,CAAC,GAAKF,IAAI,EAAIG,CAAC,GAAKF,IAAI,CAC9CG,WAAW,CAACJ,IAAI,CAAC,CAACG,CAAC,CAAC,CAAG,EAAE,CAE7BC,WAAW,CAACJ,IAAI,CAAC,CAACC,IAAI,CAAC,CAAG,EAAE,CAC5BG,WAAW,CAACF,CAAC,CAAC,CAACC,CAAC,CAAC,CAAGJ,KAAK,CACzB,MAAO,CAAAK,WAAW,CACtB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}