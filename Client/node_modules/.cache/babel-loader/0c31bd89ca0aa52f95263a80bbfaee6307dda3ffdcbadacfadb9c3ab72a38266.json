{"ast":null,"code":"export const getCharacter = file => String.fromCharCode(file + 96);\nexport const createPosition = () => {\n  const position = new Array(8).fill(\"\").map(x => new Array(8).fill(\"\"));\n\n  // for (let i = 0; i < 8; i++) {\n  //     position[6][i] = 'bp'\n  //     position[1][i] = 'wp'\n  // }\n\n  // position[0][0] = 'wr'\n  // position[0][1] = 'wn'\n  // position[0][2] = 'wb'\n  // position[0][3] = 'wq'\n  position[5][7] = \"wk\";\n  // position[0][5] = 'wb'\n  // position[0][6] = 'wn'\n  position[1][7] = \"wb\";\n\n  // position[7][0] = 'br'\n  // position[7][1] = 'bn'\n  // position[7][2] = 'bb'\n  // position[7][3] = 'bq'\n  position[7][7] = \"bk\";\n  // position[7][5] = 'bb'\n  // position[7][6] = 'bn'\n  // position[7][7] = 'br'\n\n  return position;\n};\nexport const copyPosition = position => {\n  const newPosition = new Array(8).fill(\"\").map(x => new Array(8).fill(\"\"));\n  for (let rank = 0; rank < position.length; rank++) {\n    for (let file = 0; file < position[0].length; file++) {\n      newPosition[rank][file] = position[rank][file];\n    }\n  }\n  return newPosition;\n};\nexport const areSameColorTiles = (coords1, coords2) => (coords1.x + coords1.y) % 2 === coords2.x + coords2.y;\nexport const findPieceCoords = (position, type) => {\n  let results = [];\n  position.forEach((rank, i) => {\n    rank.forEach((pos, j) => {\n      if (pos === type) results.push({\n        x: i,\n        y: j\n      });\n    });\n  });\n  return results;\n};","map":{"version":3,"names":["getCharacter","file","String","fromCharCode","createPosition","position","Array","fill","map","x","copyPosition","newPosition","rank","length","areSameColorTiles","coords1","coords2","y","findPieceCoords","type","results","forEach","i","pos","j","push"],"sources":["/home/ahmed-bashir/React-projects/chess/src/helpful/helper.js"],"sourcesContent":["export const getCharacter = (file) => String.fromCharCode(file + 96);\nexport const createPosition = () => {\n  const position = new Array(8).fill(\"\").map((x) => new Array(8).fill(\"\"));\n\n  // for (let i = 0; i < 8; i++) {\n  //     position[6][i] = 'bp'\n  //     position[1][i] = 'wp'\n  // }\n\n  // position[0][0] = 'wr'\n  // position[0][1] = 'wn'\n  // position[0][2] = 'wb'\n  // position[0][3] = 'wq'\n  position[5][7] = \"wk\";\n  // position[0][5] = 'wb'\n  // position[0][6] = 'wn'\n  position[1][7] = \"wb\";\n\n  // position[7][0] = 'br'\n  // position[7][1] = 'bn'\n  // position[7][2] = 'bb'\n  // position[7][3] = 'bq'\n  position[7][7] = \"bk\";\n  // position[7][5] = 'bb'\n  // position[7][6] = 'bn'\n  // position[7][7] = 'br'\n\n  return position;\n};\n\nexport const copyPosition = (position) => {\n  const newPosition = new Array(8).fill(\"\").map((x) => new Array(8).fill(\"\"));\n\n  for (let rank = 0; rank < position.length; rank++) {\n    for (let file = 0; file < position[0].length; file++) {\n      newPosition[rank][file] = position[rank][file];\n    }\n  }\n\n  return newPosition;\n};\n\nexport const areSameColorTiles = (coords1, coords2) =>\n  (coords1.x + coords1.y) % 2 === coords2.x + coords2.y;\n\nexport const findPieceCoords = (position, type) => {\n  let results = [];\n  position.forEach((rank, i) => {\n    rank.forEach((pos, j) => {\n      if (pos === type) results.push({ x: i, y: j });\n    });\n  });\n  return results;\n};\n"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAIC,IAAI,IAAKC,MAAM,CAACC,YAAY,CAACF,IAAI,GAAG,EAAE,CAAC;AACpE,OAAO,MAAMG,cAAc,GAAGA,CAAA,KAAM;EAClC,MAAMC,QAAQ,GAAG,IAAIC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC,CAACC,GAAG,CAAEC,CAAC,IAAK,IAAIH,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC,CAAC;;EAExE;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACAF,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI;EACrB;EACA;EACAA,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI;;EAErB;EACA;EACA;EACA;EACAA,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI;EACrB;EACA;EACA;;EAEA,OAAOA,QAAQ;AACjB,CAAC;AAED,OAAO,MAAMK,YAAY,GAAIL,QAAQ,IAAK;EACxC,MAAMM,WAAW,GAAG,IAAIL,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC,CAACC,GAAG,CAAEC,CAAC,IAAK,IAAIH,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC,CAAC;EAE3E,KAAK,IAAIK,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGP,QAAQ,CAACQ,MAAM,EAAED,IAAI,EAAE,EAAE;IACjD,KAAK,IAAIX,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGI,QAAQ,CAAC,CAAC,CAAC,CAACQ,MAAM,EAAEZ,IAAI,EAAE,EAAE;MACpDU,WAAW,CAACC,IAAI,CAAC,CAACX,IAAI,CAAC,GAAGI,QAAQ,CAACO,IAAI,CAAC,CAACX,IAAI,CAAC;IAChD;EACF;EAEA,OAAOU,WAAW;AACpB,CAAC;AAED,OAAO,MAAMG,iBAAiB,GAAGA,CAACC,OAAO,EAAEC,OAAO,KAChD,CAACD,OAAO,CAACN,CAAC,GAAGM,OAAO,CAACE,CAAC,IAAI,CAAC,KAAKD,OAAO,CAACP,CAAC,GAAGO,OAAO,CAACC,CAAC;AAEvD,OAAO,MAAMC,eAAe,GAAGA,CAACb,QAAQ,EAAEc,IAAI,KAAK;EACjD,IAAIC,OAAO,GAAG,EAAE;EAChBf,QAAQ,CAACgB,OAAO,CAAC,CAACT,IAAI,EAAEU,CAAC,KAAK;IAC5BV,IAAI,CAACS,OAAO,CAAC,CAACE,GAAG,EAAEC,CAAC,KAAK;MACvB,IAAID,GAAG,KAAKJ,IAAI,EAAEC,OAAO,CAACK,IAAI,CAAC;QAAEhB,CAAC,EAAEa,CAAC;QAAEL,CAAC,EAAEO;MAAE,CAAC,CAAC;IAChD,CAAC,CAAC;EACJ,CAAC,CAAC;EACF,OAAOJ,OAAO;AAChB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}