{"ast":null,"code":"var _jsxFileName = \"/home/ahmed-bashir/React-projects/chess/src/components/Popup/Popup.js\",\n  _s = $RefreshSig$();\nimport \"../../css/Popup.css\";\nimport React from 'react';\nimport { Status } from '../../constants';\nimport { useAppContext } from '../../contexts/Context';\nimport { closePopup } from '../../reducer/actions/popup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Popup = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const {\n    appState: {\n      status\n    },\n    dispatch\n  } = useAppContext();\n  const onClosePopup = () => {\n    dispatch(closePopup());\n  };\n  if (status === Status.ongoing) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popup\",\n    children: React.Children.toArray(children).map(child => /*#__PURE__*/React.cloneElement(child, {\n      onClosePopup\n    }))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 12\n  }, this);\n};\n_s(Popup, \"0Y+HWz6yS2smACGTjACVKlFoBSM=\", false, function () {\n  return [useAppContext];\n});\n_c = Popup;\nexport default Popup;\nvar _c;\n$RefreshReg$(_c, \"Popup\");","map":{"version":3,"names":["React","Status","useAppContext","closePopup","jsxDEV","_jsxDEV","Popup","_ref","_s","children","appState","status","dispatch","onClosePopup","ongoing","className","Children","toArray","map","child","cloneElement","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/ahmed-bashir/React-projects/chess/src/components/Popup/Popup.js"],"sourcesContent":["import \"../../css/Popup.css\";\nimport React from 'react';\nimport { Status } from '../../constants';\nimport { useAppContext }from '../../contexts/Context'\nimport { closePopup } from '../../reducer/actions/popup';\n\nconst Popup = ({children}) => {\n\n    const { appState : {status}, dispatch } = useAppContext();\n\n    const onClosePopup = () => {\n        dispatch(closePopup())\n    }\n\n    if (status === Status.ongoing)\n        return null\n\n    return <div className=\"popup\">\n        {React.Children\n            .toArray(children)\n            .map (child => React.cloneElement(child, { onClosePopup }))}\n    </div>\n}\n\nexport default Popup\n"],"mappings":";;AAAA,OAAO,qBAAqB;AAC5B,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,iBAAiB;AACxC,SAASC,aAAa,QAAO,wBAAwB;AACrD,SAASC,UAAU,QAAQ,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,KAAK,GAAGC,IAAA,IAAgB;EAAAC,EAAA;EAAA,IAAf;IAACC;EAAQ,CAAC,GAAAF,IAAA;EAErB,MAAM;IAAEG,QAAQ,EAAG;MAACC;IAAM,CAAC;IAAEC;EAAS,CAAC,GAAGV,aAAa,EAAE;EAEzD,MAAMW,YAAY,GAAGA,CAAA,KAAM;IACvBD,QAAQ,CAACT,UAAU,EAAE,CAAC;EAC1B,CAAC;EAED,IAAIQ,MAAM,KAAKV,MAAM,CAACa,OAAO,EACzB,OAAO,IAAI;EAEf,oBAAOT,OAAA;IAAKU,SAAS,EAAC,OAAO;IAAAN,QAAA,EACxBT,KAAK,CAACgB,QAAQ,CACVC,OAAO,CAACR,QAAQ,CAAC,CACjBS,GAAG,CAAEC,KAAK,iBAAInB,KAAK,CAACoB,YAAY,CAACD,KAAK,EAAE;MAAEN;IAAa,CAAC,CAAC;EAAC;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC7D;AACV,CAAC;AAAAhB,EAAA,CAhBKF,KAAK;EAAA,QAEmCJ,aAAa;AAAA;AAAAuB,EAAA,GAFrDnB,KAAK;AAkBX,eAAeA,KAAK;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}