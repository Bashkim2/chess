{"ast":null,"code":"var _jsxFileName = \"/home/ahmed-bashir/React-projects/chess/src/components/Pieces/Pieces.js\",\n  _s = $RefreshSig$();\nimport \"../../css/Pieces.css\";\nimport Piece from \"./Piece\";\nimport { useRef } from \"react\";\nimport { useAppContext } from \"../../contexts/Context\";\nimport { openPromotion } from \"../../reducer/actions/popup\";\nimport arbiter from \"../../arbiter/arbiter\";\nimport { clearCandidates, makeNewMove } from \"../../reducer/actions/move\";\nimport { getCastlingDirections } from \"../../arbiter/getMoves\";\nimport { detectInsufficientMaterial, detectStalemate, updateCastling } from \"../../reducer/actions/game\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Pieces = () => {\n  _s();\n  const {\n    appState,\n    dispatch\n  } = useAppContext();\n  const currentPosition = appState.position[appState.position.length - 1];\n  const ref = useRef();\n  const updateCastlingState = _ref => {\n    let {\n      piece,\n      file,\n      rank\n    } = _ref;\n    const direction = getCastlingDirections({\n      castleDirection: appState.castleDirection,\n      piece,\n      file,\n      rank\n    });\n    if (direction) {\n      dispatch(updateCastling(direction));\n    }\n  };\n  const openPromotionBox = _ref2 => {\n    let {\n      rank,\n      file,\n      x,\n      y\n    } = _ref2;\n    dispatch(openPromotion({\n      rank: Number(rank),\n      file: Number(file),\n      x,\n      y\n    }));\n  };\n  const calculateCoords = e => {\n    const {\n      top,\n      left,\n      width\n    } = ref.current.getBoundingClientRect();\n    const size = width / 8;\n    const y = Math.floor((e.clientX - left) / size);\n    const x = 7 - Math.floor((e.clientY - top) / size);\n    return {\n      x,\n      y\n    };\n  };\n  const move = e => {\n    const {\n      x,\n      y\n    } = calculateCoords(e);\n    const [piece, rank, file] = e.dataTransfer.getData(\"text\").split(\",\");\n    if (appState.candidateMoves.find(m => m[0] === x && m[1] === y)) {\n      const opponent = piece.startsWith(\"b\") ? \"w\" : \"b\";\n      const castleDirection = appState.castleDirection[`${piece.startsWith(\"b\") ? \"white\" : \"black\"}`];\n      if (piece === \"wp\" && x === 7 || piece === \"bp\" && x === 0) {\n        openPromotionBox({\n          rank,\n          file,\n          x,\n          y\n        });\n        return;\n      }\n      if (piece.endsWith(\"r\") || piece.endsWith(\"k\")) {\n        updateCastlingState({\n          piece,\n          file,\n          rank\n        });\n      }\n      const newPosition = arbiter.performMove({\n        position: currentPosition,\n        piece,\n        rank,\n        file,\n        x,\n        y\n      });\n      dispatch(makeNewMove({\n        newPosition\n      }));\n      if (arbiter.insufficientMaterial(newPosition)) dispatch(detectInsufficientMaterial());else if (arbiter.isStalemate(newPosition, opponent, castleDirection)) {\n        dispatch(detectStalemate());\n      } else if (arbiter.isCheckMate(newPosition, opponent, castleDirection)) {\n        dispatch(detectCheckmate(piece[0]));\n      }\n    }\n    dispatch(clearCandidates());\n  };\n  const onDrop = e => {\n    e.preventDefault();\n    move(e);\n  };\n  const onDragOver = e => {\n    e.preventDefault();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pieces\",\n    ref: ref,\n    onDrop: onDrop,\n    onDragOver: onDragOver,\n    children: currentPosition.map((r, rank) => r.map((f, file) => currentPosition[rank][file] ? /*#__PURE__*/_jsxDEV(Piece, {\n      rank: rank,\n      file: file,\n      piece: currentPosition[rank][file]\n    }, rank + \"-\" + file, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this) : null))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(Pieces, \"6AYmuEw+TsKaEACR9X8exstYPcY=\", false, function () {\n  return [useAppContext];\n});\n_c = Pieces;\nexport default Pieces;\nvar _c;\n$RefreshReg$(_c, \"Pieces\");","map":{"version":3,"names":["Piece","useRef","useAppContext","openPromotion","arbiter","clearCandidates","makeNewMove","getCastlingDirections","detectInsufficientMaterial","detectStalemate","updateCastling","jsxDEV","_jsxDEV","Pieces","_s","appState","dispatch","currentPosition","position","length","ref","updateCastlingState","_ref","piece","file","rank","direction","castleDirection","openPromotionBox","_ref2","x","y","Number","calculateCoords","e","top","left","width","current","getBoundingClientRect","size","Math","floor","clientX","clientY","move","dataTransfer","getData","split","candidateMoves","find","m","opponent","startsWith","endsWith","newPosition","performMove","insufficientMaterial","isStalemate","isCheckMate","detectCheckmate","onDrop","preventDefault","onDragOver","className","children","map","r","f","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/ahmed-bashir/React-projects/chess/src/components/Pieces/Pieces.js"],"sourcesContent":["import \"../../css/Pieces.css\";\nimport Piece from \"./Piece\";\nimport { useRef } from \"react\";\nimport { useAppContext } from \"../../contexts/Context\";\nimport { openPromotion } from \"../../reducer/actions/popup\";\nimport arbiter from \"../../arbiter/arbiter\";\nimport { clearCandidates, makeNewMove } from \"../../reducer/actions/move\";\nimport { getCastlingDirections } from \"../../arbiter/getMoves\";\nimport {\n  detectInsufficientMaterial,\n  detectStalemate,\n  updateCastling,\n} from \"../../reducer/actions/game\";\n\nconst Pieces = () => {\n  const { appState, dispatch } = useAppContext();\n  const currentPosition = appState.position[appState.position.length - 1];\n\n  const ref = useRef();\n\n  const updateCastlingState = ({ piece, file, rank }) => {\n    const direction = getCastlingDirections({\n      castleDirection: appState.castleDirection,\n      piece,\n      file,\n      rank,\n    });\n    if (direction) {\n      dispatch(updateCastling(direction));\n    }\n  };\n\n  const openPromotionBox = ({ rank, file, x, y }) => {\n    dispatch(\n      openPromotion({\n        rank: Number(rank),\n        file: Number(file),\n        x,\n        y,\n      })\n    );\n  };\n\n  const calculateCoords = (e) => {\n    const { top, left, width } = ref.current.getBoundingClientRect();\n    const size = width / 8;\n    const y = Math.floor((e.clientX - left) / size);\n    const x = 7 - Math.floor((e.clientY - top) / size);\n\n    return { x, y };\n  };\n\n  const move = (e) => {\n    const { x, y } = calculateCoords(e);\n    const [piece, rank, file] = e.dataTransfer.getData(\"text\").split(\",\");\n\n    if (appState.candidateMoves.find((m) => m[0] === x && m[1] === y)) {\n      const opponent = piece.startsWith(\"b\") ? \"w\" : \"b\";\n      const castleDirection =\n        appState.castleDirection[\n          `${piece.startsWith(\"b\") ? \"white\" : \"black\"}`\n        ];\n\n      if ((piece === \"wp\" && x === 7) || (piece === \"bp\" && x === 0)) {\n        openPromotionBox({ rank, file, x, y });\n        return;\n      }\n      if (piece.endsWith(\"r\") || piece.endsWith(\"k\")) {\n        updateCastlingState({ piece, file, rank });\n      }\n      const newPosition = arbiter.performMove({\n        position: currentPosition,\n        piece,\n        rank,\n        file,\n        x,\n        y,\n      });\n      dispatch(makeNewMove({ newPosition }));\n\n      if (arbiter.insufficientMaterial(newPosition))\n        dispatch(detectInsufficientMaterial());\n      else if (arbiter.isStalemate(newPosition, opponent, castleDirection)) {\n        dispatch(detectStalemate());\n      } else if (arbiter.isCheckMate(newPosition, opponent, castleDirection)) {\n        dispatch(detectCheckmate(piece[0]));\n      }\n    }\n    dispatch(clearCandidates());\n  };\n\n  const onDrop = (e) => {\n    e.preventDefault();\n\n    move(e);\n  };\n\n  const onDragOver = (e) => {\n    e.preventDefault();\n  };\n\n  return (\n    <div className=\"pieces\" ref={ref} onDrop={onDrop} onDragOver={onDragOver}>\n      {currentPosition.map((r, rank) =>\n        r.map((f, file) =>\n          currentPosition[rank][file] ? (\n            <Piece\n              key={rank + \"-\" + file}\n              rank={rank}\n              file={file}\n              piece={currentPosition[rank][file]}\n            />\n          ) : null\n        )\n      )}\n    </div>\n  );\n};\n\nexport default Pieces;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}