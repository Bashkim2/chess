{"ast":null,"code":"var _jsxFileName = \"/home/ahmed-bashir/React-projects/chess/src/components/chessboard.tsx\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from \"react\";\nimport \"../css/App.css\";\nimport \"../css/Output.css\";\nimport Tile from \"./tile\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst verticalsAxis = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"];\nconst horizontalAxis = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\"];\nconst initialBoardState = [];\nconst whitePiece = [\"W_rock.png\", \"W_knight.png\", \"W_bishop.png\", \"W_queen.png\", \"W_king.png\", \"W_bishop.png\", \"W_knight.png\", \"W_rock.png\"];\nfor (let i = 0; i < 8; i++) {\n  initialBoardState.push({\n    image: whitePiece[i],\n    x: i,\n    y: 0\n  });\n}\nconst blackPiece = [\"B_rock.png\", \"B_knight.png\", \"B_bishop.png\", \"B_queen.png\", \"B_king.png\", \"B_bishop.png\", \"B_knight.png\", \"B_rock.png\"];\nfor (let i = 0; i < 8; i++) {\n  initialBoardState.push({\n    image: blackPiece[i],\n    x: i,\n    y: 7\n  });\n}\nfor (let i = 0; i < 8; i++) {\n  initialBoardState.push({\n    image: \"B_pawn.png\",\n    x: i,\n    y: 6\n  });\n}\nfor (let i = 0; i < 8; i++) {\n  initialBoardState.push({\n    image: \"W_pawn.png\",\n    x: i,\n    y: 1\n  });\n}\nexport default function Chessboard() {\n  _s();\n  const [pieces, setPieces] = useState(initialBoardState);\n  const chessboardRef = useRef(null);\n  let activePiece = null;\n  function grabPiece(e) {\n    const element = e.target;\n    if (element.classList.contains(\"chessPiece\")) {\n      const x = e.clientX - 50;\n      const y = e.clientY - 50;\n      element.style.position = \"absolute\";\n      element.style.left = `${x}px`;\n      element.style.top = `${y}px`;\n      activePiece = element;\n    }\n  }\n  function movePiece(e) {\n    const chessboard = chessboardRef.current;\n    if (activePiece && chessboard) {\n      const minX = chessboard.offsetLeft - 25;\n      const minY = chessboard.offsetTop - 25;\n      const maxX = chessboard.offsetLeft + chessboard.clientWidth - 75;\n      const maxY = chessboard.offsetTop + chessboard.clientHeight - 75;\n      const x = e.clientX - 25;\n      const y = e.clientY - 25;\n      activePiece.style.position = \"absolute\";\n\n      // chessboard constraints/limitations,\n      // pieces can not be moved outside of the chessboard\n      if (x < minX) {\n        activePiece.style.left = `${minX}px`;\n      } else if (x > maxX) {\n        activePiece.style.left = `${maxX}px`;\n      } else {\n        activePiece.style.left = `${x}px`;\n      }\n      if (y < minY) {\n        activePiece.style.top = `${minY}px`;\n      } else if (y > maxY) {\n        activePiece.style.top = `${maxY}px`;\n      } else {\n        activePiece.style.top = `${y}px`;\n      }\n    }\n  }\n  function dropPiece(e) {\n    if (activePiece) {\n      setPieces(value => {\n        const pieces = value.map(p => {\n          if (p.x === 0 && p.y === 0) {\n            p.x = 1;\n            p.y = 1;\n          }\n          return p;\n        });\n        return pieces;\n      });\n      activePiece = null;\n    }\n  }\n  let board = [];\n  for (let i = verticalsAxis.length - 1; i >= 0; i--) {\n    for (let j = 0; j < horizontalAxis.length; j++) {\n      const number = i + j + 2;\n      let image = \"\";\n      pieces.forEach(p => {\n        if (p.x === j && p.y === i) {\n          image = p.image;\n        }\n      });\n      board.push( /*#__PURE__*/_jsxDEV(Tile, {\n        image: image,\n        number: number\n      }, `${j},${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 18\n      }, this));\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onMouseDown: e => grabPiece(e),\n    onMouseMove: e => movePiece(e),\n    onMouseUp: e => dropPiece(e),\n    ref: chessboardRef,\n    id: \"chessboard\",\n    className: \"bg-violet-600 w-96 h-96\",\n    children: board\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n}\n_s(Chessboard, \"6kAasZLx5SPJyW6c42kcE4DAlDI=\");\n_c = Chessboard;\nvar _c;\n$RefreshReg$(_c, \"Chessboard\");","map":{"version":3,"names":["useRef","useState","Tile","jsxDEV","_jsxDEV","verticalsAxis","horizontalAxis","initialBoardState","whitePiece","i","push","image","x","y","blackPiece","Chessboard","_s","pieces","setPieces","chessboardRef","activePiece","grabPiece","e","element","target","classList","contains","clientX","clientY","style","position","left","top","movePiece","chessboard","current","minX","offsetLeft","minY","offsetTop","maxX","clientWidth","maxY","clientHeight","dropPiece","value","map","p","board","length","j","number","forEach","fileName","_jsxFileName","lineNumber","columnNumber","onMouseDown","onMouseMove","onMouseUp","ref","id","className","children","_c","$RefreshReg$"],"sources":["/home/ahmed-bashir/React-projects/chess/src/components/chessboard.tsx"],"sourcesContent":["import { useRef, useState } from \"react\";\nimport \"../css/App.css\";\nimport \"../css/Output.css\";\nimport Tile from \"./tile\";\n\nconst verticalsAxis = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"];\nconst horizontalAxis = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\"];\n\ninterface Piece {\n  image: string;\n  x: number;\n  y: number;\n}\n\nconst initialBoardState: Piece[] = [];\n\nconst whitePiece = [\n  \"W_rock.png\",\n  \"W_knight.png\",\n  \"W_bishop.png\",\n  \"W_queen.png\",\n  \"W_king.png\",\n  \"W_bishop.png\",\n  \"W_knight.png\",\n  \"W_rock.png\",\n];\n\nfor (let i = 0; i < 8; i++) {\n  initialBoardState.push({ image: whitePiece[i], x: i, y: 0 });\n}\n\nconst blackPiece = [\n  \"B_rock.png\",\n  \"B_knight.png\",\n  \"B_bishop.png\",\n  \"B_queen.png\",\n  \"B_king.png\",\n  \"B_bishop.png\",\n  \"B_knight.png\",\n  \"B_rock.png\",\n];\n\nfor (let i = 0; i < 8; i++) {\n  initialBoardState.push({ image: blackPiece[i], x: i, y: 7 });\n}\n\nfor (let i = 0; i < 8; i++) {\n  initialBoardState.push({ image: \"B_pawn.png\", x: i, y: 6 });\n}\n\nfor (let i = 0; i < 8; i++) {\n  initialBoardState.push({ image: \"W_pawn.png\", x: i, y: 1 });\n}\n\nexport default function Chessboard() {\n  const [pieces, setPieces] = useState<Piece[]>(initialBoardState);\n  const chessboardRef = useRef<HTMLDivElement>(null);\n  let activePiece: HTMLElement | null = null;\n\n  function grabPiece(e: React.MouseEvent) {\n    const element = e.target as HTMLElement;\n    if (element.classList.contains(\"chessPiece\")) {\n      const x = e.clientX - 50;\n      const y = e.clientY - 50;\n      element.style.position = \"absolute\";\n      element.style.left = `${x}px`;\n      element.style.top = `${y}px`;\n\n      activePiece = element;\n    }\n  }\n\n  function movePiece(e: React.MouseEvent) {\n    const chessboard = chessboardRef.current;\n    if (activePiece && chessboard) {\n      const minX = chessboard.offsetLeft - 25;\n      const minY = chessboard.offsetTop - 25;\n      const maxX = chessboard.offsetLeft + chessboard.clientWidth - 75;\n      const maxY = chessboard.offsetTop + chessboard.clientHeight - 75;\n      const x = e.clientX - 25;\n      const y = e.clientY - 25;\n      activePiece.style.position = \"absolute\";\n\n      // chessboard constraints/limitations,\n      // pieces can not be moved outside of the chessboard\n      if (x < minX) {\n        activePiece.style.left = `${minX}px`;\n      } else if (x > maxX) {\n        activePiece.style.left = `${maxX}px`;\n      } else {\n        activePiece.style.left = `${x}px`;\n      }\n\n      if (y < minY) {\n        activePiece.style.top = `${minY}px`;\n      } else if (y > maxY) {\n        activePiece.style.top = `${maxY}px`;\n      } else {\n        activePiece.style.top = `${y}px`;\n      }\n    }\n  }\n\n  function dropPiece(e: React.MouseEvent) {\n    if (activePiece) {\n      setPieces((value) => {\n        const pieces = value.map((p) => {\n          if (p.x === 0 && p.y === 0) {\n            p.x = 1;\n            p.y = 1;\n          }\n          return p;\n        });\n        return pieces;\n      });\n      activePiece = null;\n    }\n  }\n\n  let board = [];\n\n  for (let i = verticalsAxis.length - 1; i >= 0; i--) {\n    for (let j = 0; j < horizontalAxis.length; j++) {\n      const number = i + j + 2;\n      let image = \"\";\n\n      pieces.forEach((p) => {\n        if (p.x === j && p.y === i) {\n          image = p.image;\n        }\n      });\n\n      board.push(<Tile key={`${j},${i}`} image={image} number={number} />);\n    }\n  }\n\n  return (\n    <div\n      onMouseDown={(e) => grabPiece(e)}\n      onMouseMove={(e) => movePiece(e)}\n      onMouseUp={(e) => dropPiece(e)}\n      ref={chessboardRef}\n      id=\"chessboard\"\n      className=\"bg-violet-600 w-96 h-96\"\n    >\n      {board}\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}