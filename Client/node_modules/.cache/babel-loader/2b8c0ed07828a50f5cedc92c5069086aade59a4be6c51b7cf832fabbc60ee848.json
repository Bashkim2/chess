{"ast":null,"code":"import _objectSpread from\"/home/ahmed-bashir/React-projects/chess/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _toConsumableArray from\"/home/ahmed-bashir/React-projects/chess/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import{Status}from\"../constant\";import actionTypes from\"./actionTypes\";export var reducer=function reducer(state,action){switch(action.type){case actionTypes.NEW_MOVE:{var position=state.position,movesList=state.movesList,turn=state.turn;position=[].concat(_toConsumableArray(position),[action.payload.newPosition]);movesList=[].concat(_toConsumableArray(movesList),[action.payload.newMove]);turn=turn===\"w\"?\"b\":\"w\";return _objectSpread(_objectSpread({},state),{},{position:position,movesList:movesList,turn:turn});}case actionTypes.GENERATE_CANDIDATE_MOVES:{var candidateMoves=action.payload.candidateMoves;return _objectSpread(_objectSpread({},state),{},{candidateMoves:candidateMoves});}case actionTypes.CLEAR_CANDIDATE_MOVES:{return _objectSpread(_objectSpread({},state),{},{candidateMoves:[]});}case actionTypes.PROMOTION_OPEN:{return _objectSpread(_objectSpread({},state),{},{status:Status.promoting,promotionSquare:_objectSpread({},action.payload)});}case actionTypes.PROMOTION_CLOSE:{return _objectSpread(_objectSpread({},state),{},{status:Status.ongoing,promotionSquare:null});}case actionTypes.CAN_CASTLE:{var _turn=state.turn,castleDirection=state.castleDirection;castleDirection[_turn]=action.payload;return _objectSpread(_objectSpread({},state),{},{castleDirection:castleDirection});}case actionTypes.STALEMATE:{return _objectSpread(_objectSpread({},state),{},{status:Status.stalemate});}case actionTypes.INSUFFICIENT_MATERIAL:{return _objectSpread(_objectSpread({},state),{},{status:Status.insufficient});}case actionTypes.WIN:{return _objectSpread(_objectSpread({},state),{},{status:action.payload===\"w\"?Status.white:Status.black});}case actionTypes.NEW_GAME:{return _objectSpread({},action.payload);}case actionTypes.TAKE_BACK:{var _position=state.position,_movesList=state.movesList,_turn2=state.turn;if(_position.length>1){_position=_position.slice(0,_position.length-1);_movesList=_movesList.slice(0,_movesList.length-1);_turn2=_turn2===\"w\"?\"b\":\"w\";}return _objectSpread(_objectSpread({},state),{},{position:_position,movesList:_movesList,turn:_turn2});}default:return state;}};","map":{"version":3,"names":["Status","actionTypes","reducer","state","action","type","NEW_MOVE","position","movesList","turn","concat","_toConsumableArray","payload","newPosition","newMove","_objectSpread","GENERATE_CANDIDATE_MOVES","candidateMoves","CLEAR_CANDIDATE_MOVES","PROMOTION_OPEN","status","promoting","promotionSquare","PROMOTION_CLOSE","ongoing","CAN_CASTLE","castleDirection","STALEMATE","stalemate","INSUFFICIENT_MATERIAL","insufficient","WIN","white","black","NEW_GAME","TAKE_BACK","length","slice"],"sources":["/home/ahmed-bashir/React-projects/chess/src/reducer/reducer.js"],"sourcesContent":["import { Status } from \"../constant\";\nimport actionTypes from \"./actionTypes\";\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case actionTypes.NEW_MOVE: {\n      let { position, movesList, turn } = state;\n      position = [...position, action.payload.newPosition];\n      movesList = [...movesList, action.payload.newMove];\n      turn = turn === \"w\" ? \"b\" : \"w\";\n\n      return {\n        ...state,\n        position,\n        movesList,\n        turn,\n      };\n    }\n\n    case actionTypes.GENERATE_CANDIDATE_MOVES: {\n      const { candidateMoves } = action.payload;\n      return {\n        ...state,\n        candidateMoves,\n      };\n    }\n\n    case actionTypes.CLEAR_CANDIDATE_MOVES: {\n      return {\n        ...state,\n        candidateMoves: [],\n      };\n    }\n\n    case actionTypes.PROMOTION_OPEN: {\n      return {\n        ...state,\n        status: Status.promoting,\n        promotionSquare: { ...action.payload },\n      };\n    }\n\n    case actionTypes.PROMOTION_CLOSE: {\n      return {\n        ...state,\n        status: Status.ongoing,\n        promotionSquare: null,\n      };\n    }\n\n    case actionTypes.CAN_CASTLE: {\n      let { turn, castleDirection } = state;\n\n      castleDirection[turn] = action.payload;\n\n      return {\n        ...state,\n        castleDirection,\n      };\n    }\n\n    case actionTypes.STALEMATE: {\n      return {\n        ...state,\n        status: Status.stalemate,\n      };\n    }\n\n    case actionTypes.INSUFFICIENT_MATERIAL: {\n      return {\n        ...state,\n        status: Status.insufficient,\n      };\n    }\n\n    case actionTypes.WIN: {\n      return {\n        ...state,\n        status: action.payload === \"w\" ? Status.white : Status.black,\n      };\n    }\n\n    case actionTypes.NEW_GAME: {\n      return {\n        ...action.payload,\n      };\n    }\n\n    case actionTypes.TAKE_BACK: {\n      let { position, movesList, turn } = state;\n      if (position.length > 1) {\n        position = position.slice(0, position.length - 1);\n        movesList = movesList.slice(0, movesList.length - 1);\n        turn = turn === \"w\" ? \"b\" : \"w\";\n      }\n\n      return {\n        ...state,\n        position,\n        movesList,\n        turn,\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}