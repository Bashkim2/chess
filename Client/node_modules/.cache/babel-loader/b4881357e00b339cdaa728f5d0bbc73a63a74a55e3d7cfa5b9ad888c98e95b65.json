{"ast":null,"code":"var _jsxFileName = \"/home/ahmed-bashir/React-projects/chess/src/components/chessboard.tsx\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from \"react\";\nimport \"../css/App.css\";\nimport \"../css/Output.css\";\nimport Tile from \"./tile\";\nimport Referee from \"../referee/Referee\";\n\n// Constants\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst verticalsAxis = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"];\nconst horizontalAxis = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\"];\n\n// Enum and interfaces\n\nexport let PieceType;\n(function (PieceType) {\n  PieceType[PieceType[\"PAWN\"] = 0] = \"PAWN\";\n  PieceType[PieceType[\"BISHOP\"] = 1] = \"BISHOP\";\n  PieceType[PieceType[\"KNIGHT\"] = 2] = \"KNIGHT\";\n  PieceType[PieceType[\"ROOK\"] = 3] = \"ROOK\";\n  PieceType[PieceType[\"QUEEN\"] = 4] = \"QUEEN\";\n  PieceType[PieceType[\"KING\"] = 5] = \"KING\";\n})(PieceType || (PieceType = {}));\nexport let TeamType;\n\n// The chessboard and pieces positions initially\n(function (TeamType) {\n  TeamType[TeamType[\"OUR\"] = 0] = \"OUR\";\n  TeamType[TeamType[\"OPPONENT\"] = 1] = \"OPPONENT\";\n})(TeamType || (TeamType = {}));\nconst initialBoardState = [];\nconst numberPiece = 8;\n\n// white pieces without pawns positions\nconst whitePiece = [\"W_rock.png\", \"W_knight.png\", \"W_bishop.png\", \"W_queen.png\", \"W_king.png\", \"W_bishop.png\", \"W_knight.png\", \"W_rock.png\"];\nfor (let i = 0; i < numberPiece; i++) {\n  if (i === 0 && i === numberPiece - 1) {\n    initialBoardState.push({\n      image: whitePiece[i],\n      x: i,\n      y: 0,\n      type: PieceType.ROOK,\n      team: TeamType.OUR\n    });\n  } else if (i === 1 && i === numberPiece - 2) {\n    initialBoardState.push({\n      image: whitePiece[i],\n      x: i,\n      y: 0,\n      type: PieceType.KNIGHT,\n      team: TeamType.OUR\n    });\n  } else if (i === 2 && i === numberPiece - 3) {\n    initialBoardState.push({\n      image: whitePiece[i],\n      x: i,\n      y: 0,\n      type: PieceType.BISHOP,\n      team: TeamType.OUR\n    });\n  } else if (i === 3 && i === numberPiece - 4) {\n    initialBoardState.push({\n      image: whitePiece[i],\n      x: i,\n      y: 0,\n      type: PieceType.QUEEN,\n      team: TeamType.OUR\n    });\n  } else {\n    initialBoardState.push({\n      image: whitePiece[i],\n      x: i,\n      y: 0,\n      type: PieceType.KING,\n      team: TeamType.OUR\n    });\n  }\n}\n\n// black pieces without pawns positions\nconst blackPiece = [\"B_rock.png\", \"B_knight.png\", \"B_bishop.png\", \"B_queen.png\", \"B_king.png\", \"B_bishop.png\", \"B_knight.png\", \"B_rock.png\"];\nfor (let i = 0; i < numberPiece; i++) {\n  if (i === 0 && i === numberPiece - 1) {\n    initialBoardState.push({\n      image: blackPiece[i],\n      x: i,\n      y: 7,\n      type: PieceType.ROOK,\n      team: TeamType.OUR\n    });\n  } else if (i === 1 && i === numberPiece - 2) {\n    initialBoardState.push({\n      image: blackPiece[i],\n      x: i,\n      y: 7,\n      type: PieceType.KNIGHT,\n      team: TeamType.OUR\n    });\n  } else if (i === 2 && i === numberPiece - 3) {\n    initialBoardState.push({\n      image: blackPiece[i],\n      x: i,\n      y: 7,\n      type: PieceType.BISHOP,\n      team: TeamType.OUR\n    });\n  } else if (i === 3 && i === numberPiece - 4) {\n    initialBoardState.push({\n      image: blackPiece[i],\n      x: i,\n      y: 7,\n      type: PieceType.QUEEN,\n      team: TeamType.OUR\n    });\n  } else {\n    initialBoardState.push({\n      image: blackPiece[i],\n      x: i,\n      y: 7,\n      type: PieceType.KING,\n      team: TeamType.OUR\n    });\n  }\n}\n\n// white pawns positions\n\nfor (let i = 0; i < 8; i++) {\n  initialBoardState.push({\n    image: \"B_pawn.png\",\n    x: i,\n    y: 6,\n    type: PieceType.PAWN,\n    team: TeamType.OPPONENT\n  });\n}\n\n// black pawns positions\n\nfor (let i = 0; i < 8; i++) {\n  initialBoardState.push({\n    image: \"W_pawn.png\",\n    x: i,\n    y: 1,\n    type: PieceType.PAWN,\n    team: TeamType.OUR\n  });\n}\n\n// The chessboard functionality\nexport default function Chessboard() {\n  _s();\n  const [pieces, setPieces] = useState(initialBoardState);\n  const [activePiece, setActivePiece] = useState(null);\n  const [gridX, setGridX] = useState(0);\n  const [gridY, setGridY] = useState(0);\n  const referee = new Referee();\n  const chessboardRef = useRef(null);\n\n  // Functions for grabbing pieces\n  function grabPiece(e) {\n    const element = e.target;\n    const chessboard = chessboardRef.current;\n    if (element.classList.contains(\"chessPiece\") && chessboard) {\n      const gridX = Math.floor((e.clientX - chessboard.offsetLeft) / 100);\n      const gridY = Math.abs(Math.ceil((e.clientY - chessboard.offsetTop - 800) / 100));\n      setGridX(gridX);\n      setGridY(gridY);\n      const x = e.clientX - 50;\n      const y = e.clientY - 50;\n      element.style.position = \"absolute\";\n      element.style.left = `${x}px`;\n      element.style.top = `${y}px`;\n      setActivePiece(element);\n    }\n  }\n\n  // Function moving pieces\n  function movePiece(e) {\n    const chessboard = chessboardRef.current;\n    if (activePiece && chessboard) {\n      const minX = chessboard.offsetLeft - 25;\n      const minY = chessboard.offsetTop - 25;\n      const maxX = chessboard.offsetLeft + chessboard.clientWidth - 75;\n      const maxY = chessboard.offsetTop + chessboard.clientHeight - 75;\n      const x = e.clientX - 25;\n      const y = e.clientY - 25;\n      activePiece.style.position = \"absolute\";\n\n      // chessboard constraints/limitations,\n      // pieces can not be moved outside of the chessboard\n      if (x < minX) {\n        activePiece.style.left = `${minX}px`;\n      } else if (x > maxX) {\n        activePiece.style.left = `${maxX}px`;\n      } else {\n        activePiece.style.left = `${x}px`;\n      }\n      if (y < minY) {\n        activePiece.style.top = `${minY}px`;\n      } else if (y > maxY) {\n        activePiece.style.top = `${maxY}px`;\n      } else {\n        activePiece.style.top = `${y}px`;\n      }\n    }\n  }\n\n  // Function dropping pieces\n  function dropPiece(e) {\n    const chessboard = chessboardRef.current;\n    if (activePiece && chessboard) {\n      const x = Math.floor((e.clientX - chessboard.offsetLeft) / 100);\n      const y = Math.abs(Math.ceil((e.clientY - chessboard.offsetTop - 800) / 100));\n      const currentPiece = pieces.find(p => p.x === gridX && p.y === gridY);\n      const attackedPiece = pieces.find(p => p.x === x && p.y === y);\n\n      // CurrentPiece (3,4)\n\n      if (currentPiece) {\n        const validMove = referee.isValidMove(gridX, gridY, x, y, currentPiece.type, currentPiece.team, pieces);\n\n        // En passant move logic\n        const isEnPassantMove = referee.isEnPassantMove(gridX, gridY, x, y, currentPiece.type, currentPiece.team, pieces);\n        if (isEnPassantMove) {\n          const updatedPieces = pieces.reduce((results, piece) => {\n            if (piece.x === gridX && piece.y === gridY) {\n              piece.enPassant;\n              piece.x = x;\n              piece.y = y;\n              results.push(piece);\n            } else if (!(piece.x === x && piece.y === y)) {\n              if (piece.type === PieceType.PAWN) {\n                piece.enPassant = false;\n              }\n              results.push(piece);\n            }\n            return results;\n          }, []);\n        } else if (validMove) {\n          // Update the piece position\n          // And if a piece is attack remove it\n          const updatedPieces = pieces.reduce((results, piece) => {\n            if (piece.x === gridX && piece.y === gridY) {\n              if (Math.abs(gridY - y) === 2 && piece.type === PieceType.PAWN) {\n                // En Passant move is true only for the long move only\n                piece.enPassant = true;\n              } else {\n                piece.enPassant = false;\n              }\n            }\n            if (piece.x === gridX && piece.y === gridY) {\n              piece.x = x;\n              piece.y = y;\n              results.push(piece);\n            } else if (!(piece.x === x && piece.y === y)) {\n              if (piece.type === PieceType.PAWN) {\n                piece.enPassant = false;\n              }\n              results.push(piece);\n            }\n            return results;\n          }, []);\n          setPieces(updatedPieces);\n        } else {\n          // Remove the attacked piece\n          activePiece.style.position = \"relative\";\n          activePiece.style.removeProperty(\"top\");\n          activePiece.style.removeProperty(\"left\");\n        }\n      }\n      setActivePiece(null);\n    }\n  }\n\n  // chessboard designed\n\n  let board = [];\n  for (let i = verticalsAxis.length - 1; i >= 0; i--) {\n    for (let j = 0; j < horizontalAxis.length; j++) {\n      const number = i + j + 2;\n      let image = \"\";\n      pieces.forEach(p => {\n        if (p.x === j && p.y === i) {\n          image = p.image;\n        }\n      });\n      board.push( /*#__PURE__*/_jsxDEV(Tile, {\n        image: image,\n        number: number\n      }, `${j},${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 18\n      }, this));\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onMouseDown: e => grabPiece(e),\n    onMouseMove: e => movePiece(e),\n    onMouseUp: e => dropPiece(e),\n    ref: chessboardRef,\n    id: \"chessboard\",\n    className: \"bg-violet-600 w-96 h-96\",\n    children: board\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 354,\n    columnNumber: 5\n  }, this);\n}\n_s(Chessboard, \"EsFUs8MlFnM+tn6BqopUP4P6ED4=\");\n_c = Chessboard;\nvar _c;\n$RefreshReg$(_c, \"Chessboard\");","map":{"version":3,"names":["useRef","useState","Tile","Referee","jsxDEV","_jsxDEV","verticalsAxis","horizontalAxis","PieceType","TeamType","initialBoardState","numberPiece","whitePiece","i","push","image","x","y","type","ROOK","team","OUR","KNIGHT","BISHOP","QUEEN","KING","blackPiece","PAWN","OPPONENT","Chessboard","_s","pieces","setPieces","activePiece","setActivePiece","gridX","setGridX","gridY","setGridY","referee","chessboardRef","grabPiece","e","element","target","chessboard","current","classList","contains","Math","floor","clientX","offsetLeft","abs","ceil","clientY","offsetTop","style","position","left","top","movePiece","minX","minY","maxX","clientWidth","maxY","clientHeight","dropPiece","currentPiece","find","p","attackedPiece","validMove","isValidMove","isEnPassantMove","updatedPieces","reduce","results","piece","enPassant","removeProperty","board","length","j","number","forEach","fileName","_jsxFileName","lineNumber","columnNumber","onMouseDown","onMouseMove","onMouseUp","ref","id","className","children","_c","$RefreshReg$"],"sources":["/home/ahmed-bashir/React-projects/chess/src/components/chessboard.tsx"],"sourcesContent":["import { useRef, useState } from \"react\";\nimport \"../css/App.css\";\nimport \"../css/Output.css\";\nimport Tile from \"./tile\";\nimport Referee from \"../referee/Referee\";\n\n// Constants\n\nconst verticalsAxis = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"];\nconst horizontalAxis = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\"];\n\n// Enum and interfaces\n\nexport interface Piece {\n  image: string;\n  x: number;\n  y: number;\n  type: PieceType;\n  team: TeamType;\n  enPassant?: boolean;\n}\n\nexport enum PieceType {\n  PAWN,\n  BISHOP,\n  KNIGHT,\n  ROOK,\n  QUEEN,\n  KING,\n}\n\nexport enum TeamType {\n  OUR,\n  OPPONENT,\n}\n\n// The chessboard and pieces positions initially\n\nconst initialBoardState: Piece[] = [];\nconst numberPiece = 8;\n\n// white pieces without pawns positions\nconst whitePiece = [\n  \"W_rock.png\",\n  \"W_knight.png\",\n  \"W_bishop.png\",\n  \"W_queen.png\",\n  \"W_king.png\",\n  \"W_bishop.png\",\n  \"W_knight.png\",\n  \"W_rock.png\",\n];\n\nfor (let i = 0; i < numberPiece; i++) {\n  if (i === 0 && i === numberPiece - 1) {\n    initialBoardState.push({\n      image: whitePiece[i],\n      x: i,\n      y: 0,\n      type: PieceType.ROOK,\n      team: TeamType.OUR,\n    });\n  } else if (i === 1 && i === numberPiece - 2) {\n    initialBoardState.push({\n      image: whitePiece[i],\n      x: i,\n      y: 0,\n      type: PieceType.KNIGHT,\n      team: TeamType.OUR,\n    });\n  } else if (i === 2 && i === numberPiece - 3) {\n    initialBoardState.push({\n      image: whitePiece[i],\n      x: i,\n      y: 0,\n      type: PieceType.BISHOP,\n      team: TeamType.OUR,\n    });\n  } else if (i === 3 && i === numberPiece - 4) {\n    initialBoardState.push({\n      image: whitePiece[i],\n      x: i,\n      y: 0,\n      type: PieceType.QUEEN,\n      team: TeamType.OUR,\n    });\n  } else {\n    initialBoardState.push({\n      image: whitePiece[i],\n      x: i,\n      y: 0,\n      type: PieceType.KING,\n      team: TeamType.OUR,\n    });\n  }\n}\n\n// black pieces without pawns positions\nconst blackPiece = [\n  \"B_rock.png\",\n  \"B_knight.png\",\n  \"B_bishop.png\",\n  \"B_queen.png\",\n  \"B_king.png\",\n  \"B_bishop.png\",\n  \"B_knight.png\",\n  \"B_rock.png\",\n];\n\nfor (let i = 0; i < numberPiece; i++) {\n  if (i === 0 && i === numberPiece - 1) {\n    initialBoardState.push({\n      image: blackPiece[i],\n      x: i,\n      y: 7,\n      type: PieceType.ROOK,\n      team: TeamType.OUR,\n    });\n  } else if (i === 1 && i === numberPiece - 2) {\n    initialBoardState.push({\n      image: blackPiece[i],\n      x: i,\n      y: 7,\n      type: PieceType.KNIGHT,\n      team: TeamType.OUR,\n    });\n  } else if (i === 2 && i === numberPiece - 3) {\n    initialBoardState.push({\n      image: blackPiece[i],\n      x: i,\n      y: 7,\n      type: PieceType.BISHOP,\n      team: TeamType.OUR,\n    });\n  } else if (i === 3 && i === numberPiece - 4) {\n    initialBoardState.push({\n      image: blackPiece[i],\n      x: i,\n      y: 7,\n      type: PieceType.QUEEN,\n      team: TeamType.OUR,\n    });\n  } else {\n    initialBoardState.push({\n      image: blackPiece[i],\n      x: i,\n      y: 7,\n      type: PieceType.KING,\n      team: TeamType.OUR,\n    });\n  }\n}\n\n// white pawns positions\n\nfor (let i = 0; i < 8; i++) {\n  initialBoardState.push({\n    image: \"B_pawn.png\",\n    x: i,\n    y: 6,\n    type: PieceType.PAWN,\n    team: TeamType.OPPONENT,\n  });\n}\n\n// black pawns positions\n\nfor (let i = 0; i < 8; i++) {\n  initialBoardState.push({\n    image: \"W_pawn.png\",\n    x: i,\n    y: 1,\n    type: PieceType.PAWN,\n    team: TeamType.OUR,\n  });\n}\n\n// The chessboard functionality\nexport default function Chessboard() {\n  const [pieces, setPieces] = useState<Piece[]>(initialBoardState);\n  const [activePiece, setActivePiece] = useState<HTMLElement | null>(null);\n  const [gridX, setGridX] = useState(0);\n  const [gridY, setGridY] = useState(0);\n  const referee = new Referee();\n\n  const chessboardRef = useRef<HTMLDivElement>(null);\n\n  // Functions for grabbing pieces\n  function grabPiece(e: React.MouseEvent) {\n    const element = e.target as HTMLElement;\n    const chessboard = chessboardRef.current;\n\n    if (element.classList.contains(\"chessPiece\") && chessboard) {\n      const gridX = Math.floor((e.clientX - chessboard.offsetLeft) / 100);\n      const gridY = Math.abs(\n        Math.ceil((e.clientY - chessboard.offsetTop - 800) / 100)\n      );\n\n      setGridX(gridX);\n      setGridY(gridY);\n\n      const x = e.clientX - 50;\n      const y = e.clientY - 50;\n      element.style.position = \"absolute\";\n      element.style.left = `${x}px`;\n      element.style.top = `${y}px`;\n\n      setActivePiece(element);\n    }\n  }\n\n  // Function moving pieces\n  function movePiece(e: React.MouseEvent) {\n    const chessboard = chessboardRef.current;\n    if (activePiece && chessboard) {\n      const minX = chessboard.offsetLeft - 25;\n      const minY = chessboard.offsetTop - 25;\n      const maxX = chessboard.offsetLeft + chessboard.clientWidth - 75;\n      const maxY = chessboard.offsetTop + chessboard.clientHeight - 75;\n      const x = e.clientX - 25;\n      const y = e.clientY - 25;\n      activePiece.style.position = \"absolute\";\n\n      // chessboard constraints/limitations,\n      // pieces can not be moved outside of the chessboard\n      if (x < minX) {\n        activePiece.style.left = `${minX}px`;\n      } else if (x > maxX) {\n        activePiece.style.left = `${maxX}px`;\n      } else {\n        activePiece.style.left = `${x}px`;\n      }\n\n      if (y < minY) {\n        activePiece.style.top = `${minY}px`;\n      } else if (y > maxY) {\n        activePiece.style.top = `${maxY}px`;\n      } else {\n        activePiece.style.top = `${y}px`;\n      }\n    }\n  }\n\n  // Function dropping pieces\n  function dropPiece(e: React.MouseEvent) {\n    const chessboard = chessboardRef.current;\n    if (activePiece && chessboard) {\n      const x = Math.floor((e.clientX - chessboard.offsetLeft) / 100);\n      const y = Math.abs(\n        Math.ceil((e.clientY - chessboard.offsetTop - 800) / 100)\n      );\n\n      const currentPiece = pieces.find((p) => p.x === gridX && p.y === gridY);\n      const attackedPiece = pieces.find((p) => p.x === x && p.y === y);\n\n      // CurrentPiece (3,4)\n\n      if (currentPiece) {\n        const validMove = referee.isValidMove(\n          gridX,\n          gridY,\n          x,\n          y,\n          currentPiece.type,\n          currentPiece.team,\n          pieces\n        );\n\n        // En passant move logic\n        const isEnPassantMove = referee.isEnPassantMove(\n          gridX,\n          gridY,\n          x,\n          y,\n          currentPiece.type,\n          currentPiece.team,\n          pieces\n        );\n\n        if (isEnPassantMove) {\n          const updatedPieces = pieces.reduce((results, piece) => {\n            if (piece.x === gridX && piece.y === gridY) {\n              piece.enPassant\n              piece.x = x;\n              piece.y = y;\n              results.push(piece);\n            }\n            else if (!(piece.x === x && piece.y === y)) {\n              if (piece.type === PieceType.PAWN) {\n                piece.enPassant = false;\n              }\n              results.push(piece);\n            }\n            return results;\n          }, [] as Piece[]);\n        } else if (validMove) {\n          // Update the piece position\n          // And if a piece is attack remove it\n          const updatedPieces = pieces.reduce((results, piece) => {\n            if (piece.x === gridX && piece.y === gridY) {\n              if (Math.abs(gridY - y) === 2 && piece.type === PieceType.PAWN) {\n                // En Passant move is true only for the long move only\n                piece.enPassant = true;\n              } else {\n                piece.enPassant = false;\n              }\n            }\n            if (piece.x === gridX && piece.y === gridY) {\n              piece.x = x;\n              piece.y = y;\n              results.push(piece);\n            } else if (!(piece.x === x && piece.y === y)) {\n              if (piece.type === PieceType.PAWN) {\n                piece.enPassant = false;\n              }\n              results.push(piece);\n            }\n\n            return results;\n          }, [] as Piece[]);\n\n          setPieces(updatedPieces);\n        } else {\n          // Remove the attacked piece\n          activePiece.style.position = \"relative\";\n          activePiece.style.removeProperty(\"top\");\n          activePiece.style.removeProperty(\"left\");\n        }\n      }\n      setActivePiece(null);\n    }\n  }\n\n  // chessboard designed\n\n  let board = [];\n\n  for (let i = verticalsAxis.length - 1; i >= 0; i--) {\n    for (let j = 0; j < horizontalAxis.length; j++) {\n      const number = i + j + 2;\n      let image = \"\";\n\n      pieces.forEach((p) => {\n        if (p.x === j && p.y === i) {\n          image = p.image;\n        }\n      });\n\n      board.push(<Tile key={`${j},${i}`} image={image} number={number} />);\n    }\n  }\n\n  return (\n    <div\n      onMouseDown={(e) => grabPiece(e)}\n      onMouseMove={(e) => movePiece(e)}\n      onMouseUp={(e) => dropPiece(e)}\n      ref={chessboardRef}\n      id=\"chessboard\"\n      className=\"bg-violet-600 w-96 h-96\"\n    >\n      {board}\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}