{"ast":null,"code":"var _jsxFileName = \"/home/ahmed-bashir/React-projects/chess/src/components/Board/Board.js\",\n  _s = $RefreshSig$();\nimport \"../../css/Board.css\";\nimport Ranks from \"./bits/Ranks.js\";\nimport Files from \"./bits/Files\";\nimport Pieces from \"../Pieces/Pieces\";\nimport { useAppContext } from \"../../contexts/Context\";\nimport Popup from \"../Popup/Popup\";\nimport PromotionBox from \"../Popup/PromotionBox/Promotions\";\nimport arbiter from \"../../arbiter/arbiter\";\nimport { getKingPosition } from \"../../arbiter/getMoves\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Board = () => {\n  _s();\n  const ranks = Array(8).fill().map((x, i) => 8 - i);\n  const files = Array(8).fill().map((x, i) => i + 1);\n  const {\n    appState\n  } = useAppContext();\n  const position = appState.position[appState.position.length - 1];\n  const checkTile = (() => {\n    const isInCheck = arbiter.isPlayerInCheck({\n      positionAfterMove: position,\n      player: appState.turn\n    });\n    if (isInCheck) return getKingPosition(position, appState.turn);\n    return null;\n  })();\n  const getClassName = (i, j) => {\n    var _appState$candidateMo;\n    let c = 'tile';\n    c += (i + j) % 2 === 0 ? ' tile--dark ' : ' tile--light ';\n    if ((_appState$candidateMo = appState.candidateMoves) !== null && _appState$candidateMo !== void 0 && _appState$candidateMo.find(m => m[0] === i && m[1] === j)) {\n      if (position[i][j]) c += ' attacking';else c += ' highlight';\n    }\n    if (checkTile && checkTile[0] === i && checkTile[1] === j) {\n      c += ' checked';\n    }\n    return c;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: [/*#__PURE__*/_jsxDEV(Ranks, {\n      ranks: ranks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tiles\",\n      children: ranks.map((rank, i) => files.map((file, j) => /*#__PURE__*/_jsxDEV(\"div\", {\n        i: i,\n        j: j,\n        className: `${getClassName(7 - i, j)}`\n      }, file + '' + rank, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 19\n      }, this)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pieces, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popup, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Files, {\n      files: files\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 10\n  }, this);\n};\n_s(Board, \"5qeY8MvPzS1kmTG2pwatizD0W6g=\", false, function () {\n  return [useAppContext];\n});\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["Ranks","Files","Pieces","useAppContext","Popup","PromotionBox","arbiter","getKingPosition","jsxDEV","_jsxDEV","Board","_s","ranks","Array","fill","map","x","i","files","appState","position","length","checkTile","isInCheck","isPlayerInCheck","positionAfterMove","player","turn","getClassName","j","_appState$candidateMo","c","candidateMoves","find","m","className","children","fileName","_jsxFileName","lineNumber","columnNumber","rank","file","_c","$RefreshReg$"],"sources":["/home/ahmed-bashir/React-projects/chess/src/components/Board/Board.js"],"sourcesContent":["import \"../../css/Board.css\";\nimport Ranks from \"./bits/Ranks.js\";\nimport Files from \"./bits/Files\";\nimport Pieces from \"../Pieces/Pieces\";\nimport { useAppContext } from \"../../contexts/Context\";\nimport Popup from \"../Popup/Popup\";\nimport PromotionBox from \"../Popup/PromotionBox/Promotions\";\n\nimport arbiter from \"../../arbiter/arbiter\";\nimport { getKingPosition } from \"../../arbiter/getMoves\";\n\nconst Board = () => {\n  const ranks = Array(8).fill().map((x,i) => 8-i)\n  const files = Array(8).fill().map((x,i) => i+1)\n\n  const { appState } = useAppContext();\n  const position = appState.position[appState.position.length - 1]\n\n  const checkTile = (() => {\n      const isInCheck =  (arbiter.isPlayerInCheck({\n          positionAfterMove : position,\n          player : appState.turn\n      }))\n\n      if (isInCheck)\n          return getKingPosition (position, appState.turn)\n\n      return null\n  })()\n\n  const getClassName = (i,j) => {\n      let c = 'tile'\n      c+= (i+j)%2 === 0 ? ' tile--dark ' : ' tile--light '\n      if (appState.candidateMoves?.find(m => m[0] === i && m[1] === j)){\n          if (position[i][j])\n              c+= ' attacking'\n          else \n              c+= ' highlight'\n      }\n\n      if (checkTile && checkTile[0] === i && checkTile[1] === j) {\n          c+= ' checked'\n      }\n\n      return c\n  }\n\n  return <div className='board'>\n\n      <Ranks ranks={ranks}/>\n\n      <div className='tiles'>\n          {ranks.map((rank,i) => \n              files.map((file,j) => \n                  <div \n                      key={file+''+rank} \n                      i={i}\n                      j={j}\n                      className={`${getClassName(7-i,j)}`}>\n                  </div>\n              ))}\n      </div>\n\n      <Pieces/>\n\n      <Popup>\n          \n      </Popup>\n\n      <Files files={files}/>\n\n  </div>\n  \n}\n\nexport default Board"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}