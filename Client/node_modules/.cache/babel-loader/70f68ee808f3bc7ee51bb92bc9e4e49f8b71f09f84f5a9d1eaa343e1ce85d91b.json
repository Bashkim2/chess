{"ast":null,"code":"export const getRookMoves = _ref => {\n  let {\n    position,\n    piece,\n    rank,\n    file\n  } = _ref;\n  const moves = [];\n  const us = piece[0];\n  const enemy = us === \"w\" ? \"b\" : \"w\";\n  const direction = [[-1, 0], [1, 0], [0, -1], [0, 1]];\n  direction.forEach(dir => {\n    for (let i = 1; i < 8; i++) {\n      var _position$x;\n      const x = rank + i * dir[0];\n      const y = file + i * dir[1];\n      if ((position === null || position === void 0 ? void 0 : (_position$x = position[x]) === null || _position$x === void 0 ? void 0 : _position$x[y]) === undefined) break;\n      if (position[x][y].startsWith(enemy)) {\n        moves.push([x, y]);\n        break;\n      }\n      if (position[x][y].startsWith(us)) break;\n      moves.push([x, y]);\n    }\n  });\n  return moves;\n};\nexport const getKnightMoves = _ref2 => {\n  var _position$rank, _position$rank$file;\n  let {\n    position,\n    rank,\n    file\n  } = _ref2;\n  const moves = [];\n  const enemy = position !== null && position !== void 0 && (_position$rank = position[rank]) !== null && _position$rank !== void 0 && (_position$rank$file = _position$rank[file]) !== null && _position$rank$file !== void 0 && _position$rank$file.startsWith(\"w\") ? \"b\" : \"w\";\n  const candidateMoves = [[-2, -1], [-2, 1], [-1, -2], [-1, 2], [1, -2], [1, 2], [2, -1], [2, 1]];\n  candidateMoves.forEach(c => {\n    var _position;\n    const targetCell = position === null || position === void 0 ? void 0 : (_position = position[rank + c[0]]) === null || _position === void 0 ? void 0 : _position[file + c[1]];\n    if (targetCell !== undefined && (targetCell.startsWith(enemy) || targetCell === \"\")) {\n      moves.push([rank + c[0], file + c[1]]);\n    }\n  });\n  return moves;\n};\nexport const getBishopMoves = _ref3 => {\n  let {\n    position,\n    piece,\n    rank,\n    file\n  } = _ref3;\n  const moves = [];\n  const us = piece[0];\n  const enemy = us === \"w\" ? \"b\" : \"w\";\n  const direction = [[-1, -1], [-1, 1], [1, -1], [1, 1]];\n  direction.forEach(dir => {\n    for (let i = 1; i < 8; i++) {\n      var _position$x2;\n      const x = rank + i * dir[0];\n      const y = file + i * dir[1];\n      if ((position === null || position === void 0 ? void 0 : (_position$x2 = position[x]) === null || _position$x2 === void 0 ? void 0 : _position$x2[y]) === undefined) break;\n      if (position[x][y].startsWith(enemy)) {\n        moves.push([x, y]);\n        break;\n      }\n      if (position[x][y].startsWith(us)) break;\n      moves.push([x, y]);\n    }\n  });\n  return moves;\n};\nexport const getQueenMoves = _ref4 => {\n  let {\n    position,\n    piece,\n    rank,\n    file\n  } = _ref4;\n  const moves = [...getRookMoves({\n    position,\n    piece,\n    rank,\n    file\n  }), ...getBishopMoves({\n    position,\n    piece,\n    rank,\n    file\n  })];\n  return moves;\n};\nexport const getKingMoves = _ref5 => {\n  let {\n    position,\n    piece,\n    rank,\n    file\n  } = _ref5;\n  const moves = [];\n  const us = piece[0];\n  const direction = [[-1, -1], [-1, 0], [-1, 1], [0, -1], [0, 1], [1, -1], [1, 0], [1, 1]];\n  direction.forEach(dir => {\n    var _position$x3;\n    const x = rank + dir[0];\n    const y = file + dir[1];\n    if ((position === null || position === void 0 ? void 0 : (_position$x3 = position[x]) === null || _position$x3 === void 0 ? void 0 : _position$x3[y]) !== undefined && !position[x][y].startsWith(us)) {\n      moves.push([x, y]);\n    }\n  });\n  return moves;\n};\nexport const getPawnMoves = _ref6 => {\n  let {\n    position,\n    piece,\n    rank,\n    file\n  } = _ref6;\n  const moves = [];\n  const dir = piece === \"wp\" ? 1 : -1;\n  if (!(position !== null && position !== void 0 && position[rank + dir][file])) {\n    moves.push([rank + dir, file]);\n  }\n  if (rank % 5 === 1) {\n    var _position2, _position3;\n    if ((position === null || position === void 0 ? void 0 : (_position2 = position[rank + dir]) === null || _position2 === void 0 ? void 0 : _position2[file]) === \"\" && (position === null || position === void 0 ? void 0 : (_position3 = position[rank + dir + dir]) === null || _position3 === void 0 ? void 0 : _position3[file]) === \"\") {\n      moves.push([rank + dir + dir, file]);\n    }\n  }\n  return moves;\n};\nexport const getPawnCaptures = _ref7 => {\n  var _position4, _position5, _position6, _position7;\n  let {\n    position,\n    prevPosition,\n    piece,\n    rank,\n    file\n  } = _ref7;\n  const moves = [];\n  const dir = piece === \"wp\" ? 1 : -1;\n  const enemy = piece[0] === \"w\" ? \"b\" : \"w\";\n  if (position !== null && position !== void 0 && (_position4 = position[rank + dir]) !== null && _position4 !== void 0 && _position4[file - 1] && position !== null && position !== void 0 && (_position5 = position[rank + dir]) !== null && _position5 !== void 0 && _position5[file - 1].startsWith(enemy)) {\n    moves.push([rank + dir, file - 1]);\n  }\n  if (position !== null && position !== void 0 && (_position6 = position[rank + dir]) !== null && _position6 !== void 0 && _position6[file + 1] && position !== null && position !== void 0 && (_position7 = position[rank + dir]) !== null && _position7 !== void 0 && _position7[file + 1].startsWith(enemy)) {\n    moves.push([rank + dir, file + 1]);\n  }\n\n  // En-Passant Move\n  const enemyPawn = dir === 1 ? \"bp\" : \"wp\";\n  const adjacentMoves = [file - 1, file + 1];\n  if (prevPosition) {\n    if (dir === 1 && rank === 4 || dir === -1 && rank === 3) {\n      adjacentMoves.forEach(f => {\n        if ((position === null || position === void 0 ? void 0 : position[rank][f]) === enemyPawn && (position === null || position === void 0 ? void 0 : position[rank + dir + dir][f]) === \"\" && (prevPosition === null || prevPosition === void 0 ? void 0 : prevPosition[rank][f]) === \"\" && (prevPosition === null || prevPosition === void 0 ? void 0 : prevPosition[rank + dir + dir][f]) === enemyPawn) {\n          moves.push([rank + dir, f]);\n        }\n      });\n    }\n  }\n  return moves;\n};","map":{"version":3,"names":["getRookMoves","_ref","position","piece","rank","file","moves","us","enemy","direction","forEach","dir","i","_position$x","x","y","undefined","startsWith","push","getKnightMoves","_ref2","_position$rank","_position$rank$file","candidateMoves","c","_position","targetCell","getBishopMoves","_ref3","_position$x2","getQueenMoves","_ref4","getKingMoves","_ref5","_position$x3","getPawnMoves","_ref6","_position2","_position3","getPawnCaptures","_ref7","_position4","_position5","_position6","_position7","prevPosition","enemyPawn","adjacentMoves","f"],"sources":["/home/ahmed-bashir/React-projects/chess/src/arbiter/getMoves.js"],"sourcesContent":["export const getRookMoves = ({ position, piece, rank, file }) => {\n  const moves = [];\n  const us = piece[0];\n  const enemy = us === \"w\" ? \"b\" : \"w\";\n\n  const direction = [\n    [-1, 0],\n    [1, 0],\n    [0, -1],\n    [0, 1],\n  ];\n\n  direction.forEach((dir) => {\n    for (let i = 1; i < 8; i++) {\n      const x = rank + i * dir[0];\n      const y = file + i * dir[1];\n      if (position?.[x]?.[y] === undefined) break;\n\n      if (position[x][y].startsWith(enemy)) {\n        moves.push([x, y]);\n        break;\n      }\n      if (position[x][y].startsWith(us)) break;\n\n      moves.push([x, y]);\n    }\n  });\n  return moves;\n};\n\nexport const getKnightMoves = ({ position, rank, file }) => {\n  const moves = [];\n  const enemy = position?.[rank]?.[file]?.startsWith(\"w\") ? \"b\" : \"w\";\n\n  const candidateMoves = [\n    [-2, -1],\n    [-2, 1],\n    [-1, -2],\n    [-1, 2],\n    [1, -2],\n    [1, 2],\n    [2, -1],\n    [2, 1],\n  ];\n\n  candidateMoves.forEach((c) => {\n    const targetCell = position?.[rank + c[0]]?.[file + c[1]];\n    if (\n      targetCell !== undefined &&\n      (targetCell.startsWith(enemy) || targetCell === \"\")\n    ) {\n      moves.push([rank + c[0], file + c[1]]);\n    }\n  });\n  return moves;\n};\nexport const getBishopMoves = ({ position, piece, rank, file }) => {\n  const moves = [];\n  const us = piece[0];\n  const enemy = us === \"w\" ? \"b\" : \"w\";\n\n  const direction = [\n    [-1, -1],\n    [-1, 1],\n    [1, -1],\n    [1, 1],\n  ];\n\n  direction.forEach((dir) => {\n    for (let i = 1; i < 8; i++) {\n      const x = rank + i * dir[0];\n      const y = file + i * dir[1];\n      if (position?.[x]?.[y] === undefined) break;\n\n      if (position[x][y].startsWith(enemy)) {\n        moves.push([x, y]);\n        break;\n      }\n      if (position[x][y].startsWith(us)) break;\n\n      moves.push([x, y]);\n    }\n  });\n  return moves;\n};\n\nexport const getQueenMoves = ({ position, piece, rank, file }) => {\n  const moves = [\n    ...getRookMoves({ position, piece, rank, file }),\n    ...getBishopMoves({ position, piece, rank, file }),\n  ];\n\n  return moves;\n};\n\nexport const getKingMoves = ({ position, piece, rank, file }) => {\n  const moves = [];\n  const us = piece[0];\n\n  const direction = [\n    [-1, -1],\n    [-1, 0],\n    [-1, 1],\n    [0, -1],\n    [0, 1],\n    [1, -1],\n    [1, 0],\n    [1, 1],\n  ];\n\n  direction.forEach((dir) => {\n    const x = rank + dir[0];\n    const y = file + dir[1];\n    if (position?.[x]?.[y] !== undefined && !position[x][y].startsWith(us)) {\n      moves.push([x, y]);\n    }\n  });\n  return moves;\n};\n\nexport const getPawnMoves = ({ position, piece, rank, file }) => {\n  const moves = [];\n  const dir = piece === \"wp\" ? 1 : -1;\n\n  if (!position?.[rank + dir][file]) {\n    moves.push([rank + dir, file]);\n  }\n  if (rank % 5 === 1) {\n    if (\n      position?.[rank + dir]?.[file] === \"\" &&\n      position?.[rank + dir + dir]?.[file] === \"\"\n    ) {\n      moves.push([rank + dir + dir, file]);\n    }\n  }\n  return moves;\n};\n\nexport const getPawnCaptures = ({\n  position,\n  prevPosition,\n  piece,\n  rank,\n  file,\n}) => {\n  const moves = [];\n  const dir = piece === \"wp\" ? 1 : -1;\n  const enemy = piece[0] === \"w\" ? \"b\" : \"w\";\n\n  if (\n    position?.[rank + dir]?.[file - 1] &&\n    position?.[rank + dir]?.[file - 1].startsWith(enemy)\n  ) {\n    moves.push([rank + dir, file - 1]);\n  }\n  if (\n    position?.[rank + dir]?.[file + 1] &&\n    position?.[rank + dir]?.[file + 1].startsWith(enemy)\n  ) {\n    moves.push([rank + dir, file + 1]);\n  }\n\n  // En-Passant Move\n  const enemyPawn = dir === 1 ? \"bp\" : \"wp\";\n  const adjacentMoves = [file - 1, file + 1];\n  if (prevPosition) {\n    if ((dir === 1 && rank === 4) || (dir === -1 && rank === 3)) {\n      adjacentMoves.forEach((f) => {\n        if (\n          position?.[rank][f] === enemyPawn &&\n          position?.[rank + dir + dir][f] === \"\" &&\n          prevPosition?.[rank][f] === \"\" &&\n          prevPosition?.[rank + dir + dir][f] === enemyPawn\n        ) {\n          moves.push([rank + dir, f]);\n        }\n      });\n    }\n  }\n\n  return moves;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}