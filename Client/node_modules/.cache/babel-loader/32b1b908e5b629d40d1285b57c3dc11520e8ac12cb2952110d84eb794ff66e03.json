{"ast":null,"code":"import { getRookMoves, getKnightMoves, getBishopMoves, getKingMoves, getPawnMoves, getQueenMoves, getPawnCaptures } from \"./getMoves\";\nconst arbiter = {\n  getRegularMoves: function (_ref) {\n    let {\n      position,\n      prevPosition,\n      piece,\n      rank,\n      file\n    } = _ref;\n    if (piece.endsWith(\"r\")) {\n      return getRookMoves({\n        position,\n        piece,\n        rank,\n        file\n      });\n    }\n    if (piece.endsWith(\"n\")) {\n      return getKnightMoves({\n        position,\n        rank,\n        file\n      });\n    }\n    if (piece.endsWith(\"b\")) {\n      return getBishopMoves({\n        position,\n        piece,\n        rank,\n        file\n      });\n    }\n    if (piece.endsWith(\"q\")) {\n      return getQueenMoves({\n        position,\n        piece,\n        rank,\n        file\n      });\n    }\n    if (piece.endsWith(\"k\")) {\n      return getKingMoves({\n        position,\n        piece,\n        rank,\n        file\n      });\n    }\n    if (piece.endsWith(\"p\")) {\n      return [...getPawnMoves({\n        position,\n        piece,\n        rank,\n        file\n      }), ...getPawnCaptures({\n        position,\n        prevPosition,\n        piece,\n        rank,\n        file\n      })];\n    }\n  },\n  getValidMoves: fun\n};\nexport default arbiter;","map":{"version":3,"names":["getRookMoves","getKnightMoves","getBishopMoves","getKingMoves","getPawnMoves","getQueenMoves","getPawnCaptures","arbiter","getRegularMoves","_ref","position","prevPosition","piece","rank","file","endsWith","getValidMoves","fun"],"sources":["/home/ahmed-bashir/React-projects/chess/src/arbiter/arbiter.js"],"sourcesContent":["import { getRookMoves, getKnightMoves, getBishopMoves, getKingMoves, getPawnMoves, getQueenMoves, getPawnCaptures } from \"./getMoves\";\n\nconst arbiter = {\n  getRegularMoves: function ({ position, prevPosition, piece, rank, file }) {\n    if (piece.endsWith(\"r\")) {\n      return getRookMoves({ position, piece, rank, file });\n    }\n    if (piece.endsWith(\"n\")) {\n      return getKnightMoves({ position, rank, file });\n    }\n    if (piece.endsWith(\"b\")) {\n      return getBishopMoves({ position, piece, rank, file });\n    }\n    if (piece.endsWith(\"q\")) {\n      return getQueenMoves({ position, piece, rank, file });\n    }\n    if (piece.endsWith(\"k\")) {\n      return getKingMoves({ position, piece, rank, file });\n    }\n    if (piece.endsWith(\"p\")) {\n      return [\n        ...getPawnMoves({ position, piece, rank, file }),\n        ...getPawnCaptures({ position, prevPosition, piece, rank, file }),\n      ];\n    }\n  },\n\n  getValidMoves: fun\n};\n\nexport default arbiter;\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,cAAc,EAAEC,cAAc,EAAEC,YAAY,EAAEC,YAAY,EAAEC,aAAa,EAAEC,eAAe,QAAQ,YAAY;AAErI,MAAMC,OAAO,GAAG;EACdC,eAAe,EAAE,SAAAA,CAAAC,IAAA,EAAyD;IAAA,IAA/C;MAAEC,QAAQ;MAAEC,YAAY;MAAEC,KAAK;MAAEC,IAAI;MAAEC;IAAK,CAAC,GAAAL,IAAA;IACtE,IAAIG,KAAK,CAACG,QAAQ,CAAC,GAAG,CAAC,EAAE;MACvB,OAAOf,YAAY,CAAC;QAAEU,QAAQ;QAAEE,KAAK;QAAEC,IAAI;QAAEC;MAAK,CAAC,CAAC;IACtD;IACA,IAAIF,KAAK,CAACG,QAAQ,CAAC,GAAG,CAAC,EAAE;MACvB,OAAOd,cAAc,CAAC;QAAES,QAAQ;QAAEG,IAAI;QAAEC;MAAK,CAAC,CAAC;IACjD;IACA,IAAIF,KAAK,CAACG,QAAQ,CAAC,GAAG,CAAC,EAAE;MACvB,OAAOb,cAAc,CAAC;QAAEQ,QAAQ;QAAEE,KAAK;QAAEC,IAAI;QAAEC;MAAK,CAAC,CAAC;IACxD;IACA,IAAIF,KAAK,CAACG,QAAQ,CAAC,GAAG,CAAC,EAAE;MACvB,OAAOV,aAAa,CAAC;QAAEK,QAAQ;QAAEE,KAAK;QAAEC,IAAI;QAAEC;MAAK,CAAC,CAAC;IACvD;IACA,IAAIF,KAAK,CAACG,QAAQ,CAAC,GAAG,CAAC,EAAE;MACvB,OAAOZ,YAAY,CAAC;QAAEO,QAAQ;QAAEE,KAAK;QAAEC,IAAI;QAAEC;MAAK,CAAC,CAAC;IACtD;IACA,IAAIF,KAAK,CAACG,QAAQ,CAAC,GAAG,CAAC,EAAE;MACvB,OAAO,CACL,GAAGX,YAAY,CAAC;QAAEM,QAAQ;QAAEE,KAAK;QAAEC,IAAI;QAAEC;MAAK,CAAC,CAAC,EAChD,GAAGR,eAAe,CAAC;QAAEI,QAAQ;QAAEC,YAAY;QAAEC,KAAK;QAAEC,IAAI;QAAEC;MAAK,CAAC,CAAC,CAClE;IACH;EACF,CAAC;EAEDE,aAAa,EAAEC;AACjB,CAAC;AAED,eAAeV,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}