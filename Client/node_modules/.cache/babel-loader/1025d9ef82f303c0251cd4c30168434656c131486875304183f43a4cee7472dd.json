{"ast":null,"code":"var _jsxFileName = \"/home/ahmed-bashir/React-projects/chess/src/components/chessboard.tsx\",\n  _s = $RefreshSig$();\nimport { useRef } from \"react\";\nimport \"../css/App.css\";\nimport \"../css/Output.css\";\nimport Tile from \"./tile\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst verticalsAxis = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"];\nconst horizontalAxis = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\"];\nconst pieces = [];\nexport default function Chessboard() {\n  _s();\n  const chessboardRef = useRef(null);\n  let activePiece = null;\n  let board = [];\n  const whitePiece = [\"W_rock.png\", \"W_knight.png\", \"W_bishop.png\", \"W_queen.png\", \"W_king.png\", \"W_bishop.png\", \"W_knight.png\", \"W_rock.png\"];\n  for (let i = 0; i < 8; i++) {\n    pieces.push({\n      image: whitePiece[i],\n      x: i,\n      y: 0\n    });\n  }\n  const blackPiece = [\"B_rock.png\", \"B_knight.png\", \"B_bishop.png\", \"B_queen.png\", \"B_king.png\", \"B_bishop.png\", \"B_knight.png\", \"B_rock.png\"];\n  for (let i = 0; i < 8; i++) {\n    pieces.push({\n      image: blackPiece[i],\n      x: i,\n      y: 7\n    });\n  }\n  for (let i = 0; i < 8; i++) {\n    pieces.push({\n      image: \"B_pawn.png\",\n      x: i,\n      y: 6\n    });\n  }\n  for (let i = 0; i < 8; i++) {\n    pieces.push({\n      image: \"W_pawn.png\",\n      x: i,\n      y: 1\n    });\n  }\n  for (let i = verticalsAxis.length - 1; i >= 0; i--) {\n    for (let j = 0; j < horizontalAxis.length; j++) {\n      const number = i + j + 2;\n      let image = \"\";\n      pieces.forEach(p => {\n        if (p.x === j && p.y === i) {\n          image = p.image;\n        }\n      });\n      board.push( /*#__PURE__*/_jsxDEV(Tile, {\n        image: image,\n        number: number\n      }, `${j},${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 18\n      }, this));\n    }\n  }\n  function grabPiece(e) {\n    const element = e.target;\n    if (element.classList.contains(\"chessPiece\")) {\n      const x = e.clientX - 50;\n      const y = e.clientY - 50;\n      element.style.position = \"absolute\";\n      element.style.left = `${x}px`;\n      element.style.top = `${y}px`;\n      activePiece = element;\n    }\n  }\n  function movePiece(e) {\n    const chessboard = chessboardRef.current;\n    if (activePiece && chessboard) {\n      const minX = chessboard.offsetLeft - 25;\n      const minY = chessboard.offsetTop - 25;\n      const maxX = chessboard.offsetLeft + chessboard.clientWidth - 75;\n      const maxY = chessboard.offsetTop + chessboard.clientHeight - 75;\n      const x = e.clientX - 25;\n      const y = e.clientY - 25;\n      activePiece.style.position = \"absolute\";\n\n      // chessboard constraints/limitations,\n      // pieces can not be moved outside of the chessboard\n      if (x < minX) {\n        activePiece.style.left = `${minX}px`;\n      } else if (x > maxX) {\n        activePiece.style.left = `${maxX}px`;\n      } else {\n        activePiece.style.left = `${x}px`;\n      }\n      if (y < minY) {\n        activePiece.style.top = `${minY}px`;\n      } else if (y > maxY) {\n        activePiece.style.top = `${maxY}px`;\n      } else {\n        activePiece.style.top = `${y}px`;\n      }\n    }\n  }\n  function dropPiece(e) {\n    if (activePiece) {\n      activePiece = null;\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onMouseDown: e => grabPiece(e),\n    onMouseMove: e => movePiece(e),\n    onMouseUp: e => dropPiece(e),\n    ref: chessboardRef,\n    id: \"chessboard\",\n    className: \"bg-violet-600 w-96 h-96\",\n    children: board\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n}\n_s(Chessboard, \"hqm8BEmtgZZuTnCWyEwuwQZCP7I=\");\n_c = Chessboard;\nvar _c;\n$RefreshReg$(_c, \"Chessboard\");","map":{"version":3,"names":["useRef","Tile","jsxDEV","_jsxDEV","verticalsAxis","horizontalAxis","pieces","Chessboard","_s","chessboardRef","activePiece","board","whitePiece","i","push","image","x","y","blackPiece","length","j","number","forEach","p","fileName","_jsxFileName","lineNumber","columnNumber","grabPiece","e","element","target","classList","contains","clientX","clientY","style","position","left","top","movePiece","chessboard","current","minX","offsetLeft","minY","offsetTop","maxX","clientWidth","maxY","clientHeight","dropPiece","onMouseDown","onMouseMove","onMouseUp","ref","id","className","children","_c","$RefreshReg$"],"sources":["/home/ahmed-bashir/React-projects/chess/src/components/chessboard.tsx"],"sourcesContent":["import { useRef } from \"react\";\nimport \"../css/App.css\";\nimport \"../css/Output.css\";\nimport Tile from \"./tile\";\n\nconst verticalsAxis = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"];\nconst horizontalAxis = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\"];\n\ninterface Piece {\n  image: string;\n  x: number;\n  y: number;\n}\n\nconst pieces: Piece[] = [];\n\nexport default function Chessboard() {\n  const chessboardRef = useRef<HTMLDivElement>(null);\n  let activePiece: HTMLElement | null = null;\n  let board = [];\n\n  const whitePiece = [\n    \"W_rock.png\",\n    \"W_knight.png\",\n    \"W_bishop.png\",\n    \"W_queen.png\",\n    \"W_king.png\",\n    \"W_bishop.png\",\n    \"W_knight.png\",\n    \"W_rock.png\",\n  ];\n\n  for (let i = 0; i < 8; i++) {\n    pieces.push({ image: whitePiece[i], x: i, y: 0 });\n  }\n\n  const blackPiece = [\n    \"B_rock.png\",\n    \"B_knight.png\",\n    \"B_bishop.png\",\n    \"B_queen.png\",\n    \"B_king.png\",\n    \"B_bishop.png\",\n    \"B_knight.png\",\n    \"B_rock.png\",\n  ];\n\n  for (let i = 0; i < 8; i++) {\n    pieces.push({ image: blackPiece[i], x: i, y: 7 });\n  }\n\n  for (let i = 0; i < 8; i++) {\n    pieces.push({ image: \"B_pawn.png\", x: i, y: 6 });\n  }\n\n  for (let i = 0; i < 8; i++) {\n    pieces.push({ image: \"W_pawn.png\", x: i, y: 1 });\n  }\n\n  for (let i = verticalsAxis.length - 1; i >= 0; i--) {\n    for (let j = 0; j < horizontalAxis.length; j++) {\n      const number = i + j + 2;\n      let image = \"\";\n\n      pieces.forEach((p) => {\n        if (p.x === j && p.y === i) {\n          image = p.image;\n        }\n      });\n\n      board.push(<Tile key={`${j},${i}`} image={image} number={number} />);\n    }\n  }\n\n  function grabPiece(e: React.MouseEvent) {\n    const element = e.target as HTMLElement;\n    if (element.classList.contains(\"chessPiece\")) {\n      const x = e.clientX - 50;\n      const y = e.clientY - 50;\n      element.style.position = \"absolute\";\n      element.style.left = `${x}px`;\n      element.style.top = `${y}px`;\n\n      activePiece = element;\n    }\n  }\n\n  function movePiece(e: React.MouseEvent) {\n    const chessboard = chessboardRef.current;\n    if (activePiece && chessboard) {\n      const minX = chessboard.offsetLeft - 25;\n      const minY = chessboard.offsetTop - 25;\n      const maxX = chessboard.offsetLeft + chessboard.clientWidth - 75;\n      const maxY = chessboard.offsetTop + chessboard.clientHeight - 75;\n      const x = e.clientX - 25;\n      const y = e.clientY - 25;\n      activePiece.style.position = \"absolute\";\n\n      // chessboard constraints/limitations,\n      // pieces can not be moved outside of the chessboard\n      if (x < minX) {\n        activePiece.style.left = `${minX}px`;\n      } else if (x > maxX) {\n        activePiece.style.left = `${maxX}px`;\n      } else {\n        activePiece.style.left = `${x}px`;\n      }\n\n      if (y < minY) {\n        activePiece.style.top = `${minY}px`;\n      } else if (y > maxY) {\n        activePiece.style.top = `${maxY}px`;\n      } else {\n        activePiece.style.top = `${y}px`;\n      }\n    }\n  }\n\n  function dropPiece(e: React.MouseEvent) {\n    if (activePiece) {\n      activePiece = null;\n    }\n  }\n\n  return (\n    <div\n      onMouseDown={(e) => grabPiece(e)}\n      onMouseMove={(e) => movePiece(e)}\n      onMouseUp={(e) => dropPiece(e)}\n      ref={chessboardRef}\n      id=\"chessboard\"\n      className=\"bg-violet-600 w-96 h-96\"\n    >\n      {board}\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}