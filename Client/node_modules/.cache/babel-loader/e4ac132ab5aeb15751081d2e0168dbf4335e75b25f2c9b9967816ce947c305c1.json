{"ast":null,"code":"export const getCharacter = file => String.fromCharCode(file + 96);\nexport const createPosition = () => {\n  const position = new Array(8).fill('').map(x => new Array(8).fill(''));\n\n  // for (let i = 0; i < 8; i++) {\n  //     position[6][i] = 'bp'\n  //     position[1][i] = 'wp'\n  // }\n\n  position[0][0] = 'wr';\n  // position[0][1] = 'wn'\n  // position[0][2] = 'wb'\n  // position[0][3] = 'wq'\n  position[0][4] = 'wk';\n  // position[0][5] = 'wb'\n  // position[0][6] = 'wn'\n  position[0][7] = 'wr';\n  position[7][0] = 'br';\n  // position[7][1] = 'bn'\n  // position[7][2] = 'bb'\n  // position[7][3] = 'bq'\n  position[7][4] = 'bk';\n  // position[7][5] = 'bb'\n  // position[7][6] = 'bn'\n  position[7][7] = 'br';\n  return position;\n};\nexport const copyPosition = position => {\n  const newPosition = new Array(8).fill('').map(x => new Array(8).fill(''));\n  for (let rank = 0; rank < position.length; rank++) {\n    for (let file = 0; file < position[0].length; file++) {\n      newPosition[rank][file] = position[rank][file];\n    }\n  }\n  return newPosition;\n};","map":{"version":3,"names":["getCharacter","file","String","fromCharCode","createPosition","position","Array","fill","map","x","copyPosition","newPosition","rank","length"],"sources":["/home/ahmed-bashir/React-projects/chess/src/helpful/helper.js"],"sourcesContent":["export const getCharacter = file => String.fromCharCode(file + 96)\nexport const createPosition = () => {\n\n    const position = new Array(8).fill('').map(x => new Array(8).fill(''))\n\n    // for (let i = 0; i < 8; i++) {\n    //     position[6][i] = 'bp'\n    //     position[1][i] = 'wp'\n    // }\n\n    position[0][0] = 'wr'\n    // position[0][1] = 'wn'\n    // position[0][2] = 'wb'\n    // position[0][3] = 'wq'\n    position[0][4] = 'wk'\n    // position[0][5] = 'wb'\n    // position[0][6] = 'wn'\n    position[0][7] = 'wr'\n    \n    position[7][0] = 'br'\n    // position[7][1] = 'bn'\n    // position[7][2] = 'bb'\n    // position[7][3] = 'bq'\n    position[7][4] = 'bk'\n    // position[7][5] = 'bb'\n    // position[7][6] = 'bn'\n    position[7][7] = 'br'\n\n    \n\n    return position\n}\n\nexport const copyPosition = position => {\n    const newPosition = \n        new Array(8).fill('').map(x => new Array(8).fill(''))\n\n    for (let rank = 0; rank < position.length; rank++) {\n        for (let file = 0; file < position[0].length; file++) {\n            newPosition[rank][file] = position[rank][file]\n        }\n    }\n\n    return newPosition\n}"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAGC,IAAI,IAAIC,MAAM,CAACC,YAAY,CAACF,IAAI,GAAG,EAAE,CAAC;AAClE,OAAO,MAAMG,cAAc,GAAGA,CAAA,KAAM;EAEhC,MAAMC,QAAQ,GAAG,IAAIC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC,CAACC,GAAG,CAACC,CAAC,IAAI,IAAIH,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC,CAAC;;EAEtE;EACA;EACA;EACA;;EAEAF,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI;EACrB;EACA;EACA;EACAA,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI;EACrB;EACA;EACAA,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI;EAErBA,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI;EACrB;EACA;EACA;EACAA,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI;EACrB;EACA;EACAA,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI;EAIrB,OAAOA,QAAQ;AACnB,CAAC;AAED,OAAO,MAAMK,YAAY,GAAGL,QAAQ,IAAI;EACpC,MAAMM,WAAW,GACb,IAAIL,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC,CAACC,GAAG,CAACC,CAAC,IAAI,IAAIH,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC,CAAC;EAEzD,KAAK,IAAIK,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGP,QAAQ,CAACQ,MAAM,EAAED,IAAI,EAAE,EAAE;IAC/C,KAAK,IAAIX,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGI,QAAQ,CAAC,CAAC,CAAC,CAACQ,MAAM,EAAEZ,IAAI,EAAE,EAAE;MAClDU,WAAW,CAACC,IAAI,CAAC,CAACX,IAAI,CAAC,GAAGI,QAAQ,CAACO,IAAI,CAAC,CAACX,IAAI,CAAC;IAClD;EACJ;EAEA,OAAOU,WAAW;AACtB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}