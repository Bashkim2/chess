{"ast":null,"code":"import actionTypes from \"./actionTypes\";\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case actionTypes.NEW_MOVE:\n      {\n        let {\n          position,\n          turn\n        } = state;\n        position = [...position, action.payload.newPosition];\n        turn = turn === \"w\" ? \"b\" : \"w\";\n        return {\n          ...state,\n          position,\n          turn\n        };\n      }\n    case actionTypes.GENERATE_CANDIDATE_MOVES:\n      {\n        const {\n          candidateMoves\n        } = action.payload;\n        return {\n          ...state,\n          candidateMoves\n        };\n      }\n    case actionTypes.CLEAR_CANDIDATE_MOVES:\n      {\n        return {\n          ...state,\n          candidateMoves: []\n        };\n      }\n    case actionTypes.PROMOTION_OPEN:\n      {\n        return {\n          ...state,\n          status: Status.promoting,\n          promotionSquare: {\n            ...action.payload\n          }\n        };\n      }\n    case actionTypes.PROMOTION_CLOSE:\n      {\n        return {\n          ...state,\n          status: Status.ongoing,\n          promotionSquare: null\n        };\n      }\n    case actionTypes.CAN_CASTLE:\n      {\n        let {\n          turn,\n          castleDirection\n        } = state;\n        castleDirection[turn] = action.payload;\n        return {\n          ...state,\n          castleDirection\n        };\n      }\n    case actionTypes.STALEMATE:\n      {\n        return {\n          ...state,\n          status: Status.stalemate\n        };\n      }\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["actionTypes","reducer","state","action","type","NEW_MOVE","position","turn","payload","newPosition","GENERATE_CANDIDATE_MOVES","candidateMoves","CLEAR_CANDIDATE_MOVES","PROMOTION_OPEN","status","Status","promoting","promotionSquare","PROMOTION_CLOSE","ongoing","CAN_CASTLE","castleDirection","STALEMATE","stalemate"],"sources":["/home/ahmed-bashir/React-projects/chess/src/reducer/reducer.js"],"sourcesContent":["\nimport actionTypes from \"./actionTypes\";\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case actionTypes.NEW_MOVE: {\n      let { position, turn } = state;\n      position = [...position, action.payload.newPosition];\n\n      turn = turn === \"w\" ? \"b\" : \"w\";\n\n      return {\n        ...state,\n        position,\n        turn,\n      };\n    }\n\n    case actionTypes.GENERATE_CANDIDATE_MOVES: {\n      const { candidateMoves } = action.payload;\n      return {\n        ...state,\n        candidateMoves,\n      };\n    }\n\n    case actionTypes.CLEAR_CANDIDATE_MOVES: {\n      return {\n        ...state,\n        candidateMoves: [],\n      };\n    }\n\n    case actionTypes.PROMOTION_OPEN: {\n      return {\n        ...state,\n        status: Status.promoting,\n        promotionSquare: { ...action.payload },\n      };\n    }\n\n    case actionTypes.PROMOTION_CLOSE: {\n      return {\n        ...state,\n        status: Status.ongoing,\n        promotionSquare: null,\n      };\n    }\n\n    case actionTypes.CAN_CASTLE: {\n      let { turn, castleDirection } = state;\n\n      castleDirection[turn] = action.payload;\n\n      return {\n        ...state,\n        castleDirection,\n      };\n    }\n\n    case actionTypes.STALEMATE: {\n      return {\n        ...state,\n        status: Status.stalemate,\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n"],"mappings":"AACA,OAAOA,WAAW,MAAM,eAAe;AACvC,OAAO,MAAMC,OAAO,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACxC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKJ,WAAW,CAACK,QAAQ;MAAE;QACzB,IAAI;UAAEC,QAAQ;UAAEC;QAAK,CAAC,GAAGL,KAAK;QAC9BI,QAAQ,GAAG,CAAC,GAAGA,QAAQ,EAAEH,MAAM,CAACK,OAAO,CAACC,WAAW,CAAC;QAEpDF,IAAI,GAAGA,IAAI,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG;QAE/B,OAAO;UACL,GAAGL,KAAK;UACRI,QAAQ;UACRC;QACF,CAAC;MACH;IAEA,KAAKP,WAAW,CAACU,wBAAwB;MAAE;QACzC,MAAM;UAAEC;QAAe,CAAC,GAAGR,MAAM,CAACK,OAAO;QACzC,OAAO;UACL,GAAGN,KAAK;UACRS;QACF,CAAC;MACH;IAEA,KAAKX,WAAW,CAACY,qBAAqB;MAAE;QACtC,OAAO;UACL,GAAGV,KAAK;UACRS,cAAc,EAAE;QAClB,CAAC;MACH;IAEA,KAAKX,WAAW,CAACa,cAAc;MAAE;QAC/B,OAAO;UACL,GAAGX,KAAK;UACRY,MAAM,EAAEC,MAAM,CAACC,SAAS;UACxBC,eAAe,EAAE;YAAE,GAAGd,MAAM,CAACK;UAAQ;QACvC,CAAC;MACH;IAEA,KAAKR,WAAW,CAACkB,eAAe;MAAE;QAChC,OAAO;UACL,GAAGhB,KAAK;UACRY,MAAM,EAAEC,MAAM,CAACI,OAAO;UACtBF,eAAe,EAAE;QACnB,CAAC;MACH;IAEA,KAAKjB,WAAW,CAACoB,UAAU;MAAE;QAC3B,IAAI;UAAEb,IAAI;UAAEc;QAAgB,CAAC,GAAGnB,KAAK;QAErCmB,eAAe,CAACd,IAAI,CAAC,GAAGJ,MAAM,CAACK,OAAO;QAEtC,OAAO;UACL,GAAGN,KAAK;UACRmB;QACF,CAAC;MACH;IAEA,KAAKrB,WAAW,CAACsB,SAAS;MAAE;QAC1B,OAAO;UACL,GAAGpB,KAAK;UACRY,MAAM,EAAEC,MAAM,CAACQ;QACjB,CAAC;MACH;IAEA;MACE,OAAOrB,KAAK;EAAC;AAEnB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}