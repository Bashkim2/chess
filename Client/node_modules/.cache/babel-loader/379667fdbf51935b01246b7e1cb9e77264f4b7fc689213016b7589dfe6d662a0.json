{"ast":null,"code":"import _objectSpread from\"/home/ahmed-bashir/React-projects/chess/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/home/ahmed-bashir/React-projects/chess/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _toConsumableArray from\"/home/ahmed-bashir/React-projects/chess/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import{areSameColorTiles,findPieceCoords}from\"../helpful/helper\";import{getKnightMoves,getRookMoves,getBishopMoves,getQueenMoves,getKingMoves,getPawnMoves,getPawnCaptures,getCastlingMoves,getPieces,getKingPosition}from\"./getMoves\";import{movePiece,movePawn}from\"./move\";var arbiter={getRegularMoves:function getRegularMoves(_ref){var position=_ref.position,piece=_ref.piece,rank=_ref.rank,file=_ref.file;if(piece.endsWith(\"n\"))return getKnightMoves({position:position,rank:rank,file:file});if(piece.endsWith(\"b\"))return getBishopMoves({position:position,piece:piece,rank:rank,file:file});if(piece.endsWith(\"r\"))return getRookMoves({position:position,piece:piece,rank:rank,file:file});if(piece.endsWith(\"q\"))return getQueenMoves({position:position,piece:piece,rank:rank,file:file});if(piece.endsWith(\"k\"))return getKingMoves({position:position,piece:piece,rank:rank,file:file});if(piece.endsWith(\"p\"))return getPawnMoves({position:position,piece:piece,rank:rank,file:file});},getValidMoves:function getValidMoves(_ref2){var _this=this;var position=_ref2.position,castleDirection=_ref2.castleDirection,prevPosition=_ref2.prevPosition,piece=_ref2.piece,rank=_ref2.rank,file=_ref2.file;var moves=this.getRegularMoves({position:position,piece:piece,rank:rank,file:file});var notInCheckMoves=[];if(piece.endsWith(\"p\")){moves=[].concat(_toConsumableArray(moves),_toConsumableArray(getPawnCaptures({position:position,prevPosition:prevPosition,piece:piece,rank:rank,file:file})));}if(piece.endsWith(\"k\"))moves=[].concat(_toConsumableArray(moves),_toConsumableArray(getCastlingMoves({position:position,castleDirection:castleDirection,piece:piece,rank:rank,file:file})));moves.forEach(function(_ref3){var _ref4=_slicedToArray(_ref3,2),x=_ref4[0],y=_ref4[1];var positionAfterMove=_this.performMove({position:position,piece:piece,rank:rank,file:file,x:x,y:y});if(!_this.isPlayerInCheck({positionAfterMove:positionAfterMove,position:position,player:piece[0]})){notInCheckMoves.push([x,y]);}});return notInCheckMoves;},isPlayerInCheck:function isPlayerInCheck(_ref5){var _this2=this;var positionAfterMove=_ref5.positionAfterMove,position=_ref5.position,player=_ref5.player;var enemy=player.startsWith(\"w\")?\"b\":\"w\";var kingPos=getKingPosition(positionAfterMove,player);var enemyPieces=getPieces(positionAfterMove,enemy);var enemyMoves=enemyPieces.reduce(function(acc,p){return acc=[].concat(_toConsumableArray(acc),_toConsumableArray(p.piece.endsWith(\"p\")?getPawnCaptures(_objectSpread({position:positionAfterMove,prevPosition:position},p)):_this2.getRegularMoves(_objectSpread({position:positionAfterMove},p))));},[]);if(enemyMoves.some(function(_ref6){var _ref7=_slicedToArray(_ref6,2),x=_ref7[0],y=_ref7[1];return kingPos[0]===x&&kingPos[1]===y;}))return true;else return false;},performMove:function performMove(_ref8){var position=_ref8.position,piece=_ref8.piece,rank=_ref8.rank,file=_ref8.file,x=_ref8.x,y=_ref8.y;if(piece.endsWith(\"p\"))return movePawn({position:position,piece:piece,rank:rank,file:file,x:x,y:y});else return movePiece({position:position,piece:piece,rank:rank,file:file,x:x,y:y});},isStalemate:function isStalemate(position,player,castleDirection){var _this3=this;var isInCheck=this.isPlayerInCheck({positionAfterMove:position,player:player});if(isInCheck)return false;var pieces=getPieces(position,player);var moves=pieces.reduce(function(acc,p){return acc=[].concat(_toConsumableArray(acc),_toConsumableArray(_this3.getValidMoves(_objectSpread({position:position,castleDirection:castleDirection},p))));},[]);return!isInCheck&&moves.length===0;},insufficientMaterial:function insufficientMaterial(position){var pieces=position.reduce(function(acc,rank){return acc=[].concat(_toConsumableArray(acc),_toConsumableArray(rank.filter(function(x){return x;})));},[]);// King vs. king\nif(pieces.length===2)return true;// King and bishop vs. king\n// King and knight vs. king\nif(pieces.length===3&&pieces.some(function(p){return p.endsWith(\"b\")||p.endsWith(\"n\");}))return true;// King and bishop vs. king and bishop of the same color as the opponent's bishop\nif(pieces.length===4&&pieces.every(function(p){return p.endsWith(\"b\")||p.endsWith(\"k\");})&&new Set(pieces).size===4&&areSameColorTiles(findPieceCoords(position,\"wb\")[0],findPieceCoords(position,\"bb\")[0]))return true;return false;},isCheckMate:function isCheckMate(position,player,castleDirection){var _this4=this;var isInCheck=this.isPlayerInCheck({positionAfterMove:position,player:player});if(!isInCheck)return false;var pieces=getPieces(position,player);var moves=pieces.reduce(function(acc,p){return acc=[].concat(_toConsumableArray(acc),_toConsumableArray(_this4.getValidMoves(_objectSpread({position:position,castleDirection:castleDirection},p))));},[]);return isInCheck&&moves.length===0;}};export default arbiter;","map":{"version":3,"names":["areSameColorTiles","findPieceCoords","getKnightMoves","getRookMoves","getBishopMoves","getQueenMoves","getKingMoves","getPawnMoves","getPawnCaptures","getCastlingMoves","getPieces","getKingPosition","movePiece","movePawn","arbiter","getRegularMoves","_ref","position","piece","rank","file","endsWith","getValidMoves","_ref2","_this","castleDirection","prevPosition","moves","notInCheckMoves","concat","_toConsumableArray","forEach","_ref3","_ref4","_slicedToArray","x","y","positionAfterMove","performMove","isPlayerInCheck","player","push","_ref5","_this2","enemy","startsWith","kingPos","enemyPieces","enemyMoves","reduce","acc","p","_objectSpread","some","_ref6","_ref7","_ref8","isStalemate","_this3","isInCheck","pieces","length","insufficientMaterial","filter","every","Set","size","isCheckMate","_this4"],"sources":["/home/ahmed-bashir/React-projects/chess/src/arbiter/arbiter.js"],"sourcesContent":["import { areSameColorTiles, findPieceCoords } from \"../helpful/helper\";\nimport {\n  getKnightMoves,\n  getRookMoves,\n  getBishopMoves,\n  getQueenMoves,\n  getKingMoves,\n  getPawnMoves,\n  getPawnCaptures,\n  getCastlingMoves,\n  getPieces,\n  getKingPosition,\n} from \"./getMoves\";\nimport { movePiece, movePawn } from \"./move\";\n\nconst arbiter = {\n  getRegularMoves: function ({ position, piece, rank, file }) {\n    if (piece.endsWith(\"n\")) return getKnightMoves({ position, rank, file });\n    if (piece.endsWith(\"b\"))\n      return getBishopMoves({ position, piece, rank, file });\n    if (piece.endsWith(\"r\"))\n      return getRookMoves({ position, piece, rank, file });\n    if (piece.endsWith(\"q\"))\n      return getQueenMoves({ position, piece, rank, file });\n    if (piece.endsWith(\"k\"))\n      return getKingMoves({ position, piece, rank, file });\n    if (piece.endsWith(\"p\"))\n      return getPawnMoves({ position, piece, rank, file });\n  },\n\n  getValidMoves: function ({\n    position,\n    castleDirection,\n    prevPosition,\n    piece,\n    rank,\n    file,\n  }) {\n    let moves = this.getRegularMoves({ position, piece, rank, file });\n    const notInCheckMoves = [];\n\n    if (piece.endsWith(\"p\")) {\n      moves = [\n        ...moves,\n        ...getPawnCaptures({ position, prevPosition, piece, rank, file }),\n      ];\n    }\n    if (piece.endsWith(\"k\"))\n      moves = [\n        ...moves,\n        ...getCastlingMoves({ position, castleDirection, piece, rank, file }),\n      ];\n\n    moves.forEach(([x, y]) => {\n      const positionAfterMove = this.performMove({\n        position,\n        piece,\n        rank,\n        file,\n        x,\n        y,\n      });\n\n      if (\n        !this.isPlayerInCheck({ positionAfterMove, position, player: piece[0] })\n      ) {\n        notInCheckMoves.push([x, y]);\n      }\n    });\n    return notInCheckMoves;\n  },\n\n  isPlayerInCheck: function ({ positionAfterMove, position, player }) {\n    const enemy = player.startsWith(\"w\") ? \"b\" : \"w\";\n    let kingPos = getKingPosition(positionAfterMove, player);\n    const enemyPieces = getPieces(positionAfterMove, enemy);\n\n    const enemyMoves = enemyPieces.reduce(\n      (acc, p) =>\n        (acc = [\n          ...acc,\n          ...(p.piece.endsWith(\"p\")\n            ? getPawnCaptures({\n                position: positionAfterMove,\n                prevPosition: position,\n                ...p,\n              })\n            : this.getRegularMoves({\n                position: positionAfterMove,\n                ...p,\n              })),\n        ]),\n      []\n    );\n\n    if (enemyMoves.some(([x, y]) => kingPos[0] === x && kingPos[1] === y))\n      return true;\n    else return false;\n  },\n\n  performMove: function ({ position, piece, rank, file, x, y }) {\n    if (piece.endsWith(\"p\"))\n      return movePawn({ position, piece, rank, file, x, y });\n    else return movePiece({ position, piece, rank, file, x, y });\n  },\n\n  isStalemate: function (position, player, castleDirection) {\n    const isInCheck = this.isPlayerInCheck({\n      positionAfterMove: position,\n      player,\n    });\n\n    if (isInCheck) return false;\n\n    const pieces = getPieces(position, player);\n    const moves = pieces.reduce(\n      (acc, p) =>\n        (acc = [\n          ...acc,\n          ...this.getValidMoves({\n            position,\n            castleDirection,\n            ...p,\n          }),\n        ]),\n      []\n    );\n\n    return !isInCheck && moves.length === 0;\n  },\n\n  insufficientMaterial: function (position) {\n    const pieces = position.reduce(\n      (acc, rank) => (acc = [...acc, ...rank.filter((x) => x)]),\n      []\n    );\n\n    // King vs. king\n    if (pieces.length === 2) return true;\n\n    // King and bishop vs. king\n    // King and knight vs. king\n    if (\n      pieces.length === 3 &&\n      pieces.some((p) => p.endsWith(\"b\") || p.endsWith(\"n\"))\n    )\n      return true;\n\n    // King and bishop vs. king and bishop of the same color as the opponent's bishop\n    if (\n      pieces.length === 4 &&\n      pieces.every((p) => p.endsWith(\"b\") || p.endsWith(\"k\")) &&\n      new Set(pieces).size === 4 &&\n      areSameColorTiles(\n        findPieceCoords(position, \"wb\")[0],\n        findPieceCoords(position, \"bb\")[0]\n      )\n    )\n      return true;\n\n    return false;\n  },\n\n  isCheckMate: function (position, player, castleDirection) {\n    const isInCheck = this.isPlayerInCheck({\n      positionAfterMove: position,\n      player,\n    });\n\n    if (!isInCheck) return false;\n\n    const pieces = getPieces(position, player);\n    const moves = pieces.reduce(\n      (acc, p) =>\n        (acc = [\n          ...acc,\n          ...this.getValidMoves({\n            position,\n            castleDirection,\n            ...p,\n          }),\n        ]),\n      []\n    );\n\n    return isInCheck && moves.length === 0;\n  },\n};\n\nexport default arbiter;\n"],"mappings":"8XAAA,OAASA,iBAAiB,CAAEC,eAAe,KAAQ,mBAAmB,CACtE,OACEC,cAAc,CACdC,YAAY,CACZC,cAAc,CACdC,aAAa,CACbC,YAAY,CACZC,YAAY,CACZC,eAAe,CACfC,gBAAgB,CAChBC,SAAS,CACTC,eAAe,KACV,YAAY,CACnB,OAASC,SAAS,CAAEC,QAAQ,KAAQ,QAAQ,CAE5C,GAAM,CAAAC,OAAO,CAAG,CACdC,eAAe,CAAE,SAAAA,gBAAAC,IAAA,CAA2C,IAA/B,CAAAC,QAAQ,CAAAD,IAAA,CAARC,QAAQ,CAAEC,KAAK,CAAAF,IAAA,CAALE,KAAK,CAAEC,IAAI,CAAAH,IAAA,CAAJG,IAAI,CAAEC,IAAI,CAAAJ,IAAA,CAAJI,IAAI,CACtD,GAAIF,KAAK,CAACG,QAAQ,CAAC,GAAG,CAAC,CAAE,MAAO,CAAAnB,cAAc,CAAC,CAAEe,QAAQ,CAARA,QAAQ,CAAEE,IAAI,CAAJA,IAAI,CAAEC,IAAI,CAAJA,IAAK,CAAC,CAAC,CACxE,GAAIF,KAAK,CAACG,QAAQ,CAAC,GAAG,CAAC,CACrB,MAAO,CAAAjB,cAAc,CAAC,CAAEa,QAAQ,CAARA,QAAQ,CAAEC,KAAK,CAALA,KAAK,CAAEC,IAAI,CAAJA,IAAI,CAAEC,IAAI,CAAJA,IAAK,CAAC,CAAC,CACxD,GAAIF,KAAK,CAACG,QAAQ,CAAC,GAAG,CAAC,CACrB,MAAO,CAAAlB,YAAY,CAAC,CAAEc,QAAQ,CAARA,QAAQ,CAAEC,KAAK,CAALA,KAAK,CAAEC,IAAI,CAAJA,IAAI,CAAEC,IAAI,CAAJA,IAAK,CAAC,CAAC,CACtD,GAAIF,KAAK,CAACG,QAAQ,CAAC,GAAG,CAAC,CACrB,MAAO,CAAAhB,aAAa,CAAC,CAAEY,QAAQ,CAARA,QAAQ,CAAEC,KAAK,CAALA,KAAK,CAAEC,IAAI,CAAJA,IAAI,CAAEC,IAAI,CAAJA,IAAK,CAAC,CAAC,CACvD,GAAIF,KAAK,CAACG,QAAQ,CAAC,GAAG,CAAC,CACrB,MAAO,CAAAf,YAAY,CAAC,CAAEW,QAAQ,CAARA,QAAQ,CAAEC,KAAK,CAALA,KAAK,CAAEC,IAAI,CAAJA,IAAI,CAAEC,IAAI,CAAJA,IAAK,CAAC,CAAC,CACtD,GAAIF,KAAK,CAACG,QAAQ,CAAC,GAAG,CAAC,CACrB,MAAO,CAAAd,YAAY,CAAC,CAAEU,QAAQ,CAARA,QAAQ,CAAEC,KAAK,CAALA,KAAK,CAAEC,IAAI,CAAJA,IAAI,CAAEC,IAAI,CAAJA,IAAK,CAAC,CAAC,CACxD,CAAC,CAEDE,aAAa,CAAE,SAAAA,cAAAC,KAAA,CAOZ,KAAAC,KAAA,SAND,CAAAP,QAAQ,CAAAM,KAAA,CAARN,QAAQ,CACRQ,eAAe,CAAAF,KAAA,CAAfE,eAAe,CACfC,YAAY,CAAAH,KAAA,CAAZG,YAAY,CACZR,KAAK,CAAAK,KAAA,CAALL,KAAK,CACLC,IAAI,CAAAI,KAAA,CAAJJ,IAAI,CACJC,IAAI,CAAAG,KAAA,CAAJH,IAAI,CAEJ,GAAI,CAAAO,KAAK,CAAG,IAAI,CAACZ,eAAe,CAAC,CAAEE,QAAQ,CAARA,QAAQ,CAAEC,KAAK,CAALA,KAAK,CAAEC,IAAI,CAAJA,IAAI,CAAEC,IAAI,CAAJA,IAAK,CAAC,CAAC,CACjE,GAAM,CAAAQ,eAAe,CAAG,EAAE,CAE1B,GAAIV,KAAK,CAACG,QAAQ,CAAC,GAAG,CAAC,CAAE,CACvBM,KAAK,IAAAE,MAAA,CAAAC,kBAAA,CACAH,KAAK,EAAAG,kBAAA,CACLtB,eAAe,CAAC,CAAES,QAAQ,CAARA,QAAQ,CAAES,YAAY,CAAZA,YAAY,CAAER,KAAK,CAALA,KAAK,CAAEC,IAAI,CAAJA,IAAI,CAAEC,IAAI,CAAJA,IAAK,CAAC,CAAC,EAClE,CACH,CACA,GAAIF,KAAK,CAACG,QAAQ,CAAC,GAAG,CAAC,CACrBM,KAAK,IAAAE,MAAA,CAAAC,kBAAA,CACAH,KAAK,EAAAG,kBAAA,CACLrB,gBAAgB,CAAC,CAAEQ,QAAQ,CAARA,QAAQ,CAAEQ,eAAe,CAAfA,eAAe,CAAEP,KAAK,CAALA,KAAK,CAAEC,IAAI,CAAJA,IAAI,CAAEC,IAAI,CAAJA,IAAK,CAAC,CAAC,EACtE,CAEHO,KAAK,CAACI,OAAO,CAAC,SAAAC,KAAA,CAAY,KAAAC,KAAA,CAAAC,cAAA,CAAAF,KAAA,IAAVG,CAAC,CAAAF,KAAA,IAAEG,CAAC,CAAAH,KAAA,IAClB,GAAM,CAAAI,iBAAiB,CAAGb,KAAI,CAACc,WAAW,CAAC,CACzCrB,QAAQ,CAARA,QAAQ,CACRC,KAAK,CAALA,KAAK,CACLC,IAAI,CAAJA,IAAI,CACJC,IAAI,CAAJA,IAAI,CACJe,CAAC,CAADA,CAAC,CACDC,CAAC,CAADA,CACF,CAAC,CAAC,CAEF,GACE,CAACZ,KAAI,CAACe,eAAe,CAAC,CAAEF,iBAAiB,CAAjBA,iBAAiB,CAAEpB,QAAQ,CAARA,QAAQ,CAAEuB,MAAM,CAAEtB,KAAK,CAAC,CAAC,CAAE,CAAC,CAAC,CACxE,CACAU,eAAe,CAACa,IAAI,CAAC,CAACN,CAAC,CAAEC,CAAC,CAAC,CAAC,CAC9B,CACF,CAAC,CAAC,CACF,MAAO,CAAAR,eAAe,CACxB,CAAC,CAEDW,eAAe,CAAE,SAAAA,gBAAAG,KAAA,CAAmD,KAAAC,MAAA,SAAvC,CAAAN,iBAAiB,CAAAK,KAAA,CAAjBL,iBAAiB,CAAEpB,QAAQ,CAAAyB,KAAA,CAARzB,QAAQ,CAAEuB,MAAM,CAAAE,KAAA,CAANF,MAAM,CAC9D,GAAM,CAAAI,KAAK,CAAGJ,MAAM,CAACK,UAAU,CAAC,GAAG,CAAC,CAAG,GAAG,CAAG,GAAG,CAChD,GAAI,CAAAC,OAAO,CAAGnC,eAAe,CAAC0B,iBAAiB,CAAEG,MAAM,CAAC,CACxD,GAAM,CAAAO,WAAW,CAAGrC,SAAS,CAAC2B,iBAAiB,CAAEO,KAAK,CAAC,CAEvD,GAAM,CAAAI,UAAU,CAAGD,WAAW,CAACE,MAAM,CACnC,SAACC,GAAG,CAAEC,CAAC,QACJ,CAAAD,GAAG,IAAArB,MAAA,CAAAC,kBAAA,CACCoB,GAAG,EAAApB,kBAAA,CACFqB,CAAC,CAACjC,KAAK,CAACG,QAAQ,CAAC,GAAG,CAAC,CACrBb,eAAe,CAAA4C,aAAA,EACbnC,QAAQ,CAAEoB,iBAAiB,CAC3BX,YAAY,CAAET,QAAQ,EACnBkC,CAAC,EACJ,CACFR,MAAI,CAAC5B,eAAe,CAAAqC,aAAA,EAClBnC,QAAQ,CAAEoB,iBAAiB,EACxBc,CAAC,EACJ,EACP,EAAC,CACJ,EAAE,CACH,CAED,GAAIH,UAAU,CAACK,IAAI,CAAC,SAAAC,KAAA,MAAAC,KAAA,CAAArB,cAAA,CAAAoB,KAAA,IAAEnB,CAAC,CAAAoB,KAAA,IAAEnB,CAAC,CAAAmB,KAAA,UAAM,CAAAT,OAAO,CAAC,CAAC,CAAC,GAAKX,CAAC,EAAIW,OAAO,CAAC,CAAC,CAAC,GAAKV,CAAC,GAAC,CACnE,MAAO,KAAI,CAAC,IACT,OAAO,MAAK,CACnB,CAAC,CAEDE,WAAW,CAAE,SAAAA,YAAAkB,KAAA,CAAiD,IAArC,CAAAvC,QAAQ,CAAAuC,KAAA,CAARvC,QAAQ,CAAEC,KAAK,CAAAsC,KAAA,CAALtC,KAAK,CAAEC,IAAI,CAAAqC,KAAA,CAAJrC,IAAI,CAAEC,IAAI,CAAAoC,KAAA,CAAJpC,IAAI,CAAEe,CAAC,CAAAqB,KAAA,CAADrB,CAAC,CAAEC,CAAC,CAAAoB,KAAA,CAADpB,CAAC,CACxD,GAAIlB,KAAK,CAACG,QAAQ,CAAC,GAAG,CAAC,CACrB,MAAO,CAAAR,QAAQ,CAAC,CAAEI,QAAQ,CAARA,QAAQ,CAAEC,KAAK,CAALA,KAAK,CAAEC,IAAI,CAAJA,IAAI,CAAEC,IAAI,CAAJA,IAAI,CAAEe,CAAC,CAADA,CAAC,CAAEC,CAAC,CAADA,CAAE,CAAC,CAAC,CAAC,IACpD,OAAO,CAAAxB,SAAS,CAAC,CAAEK,QAAQ,CAARA,QAAQ,CAAEC,KAAK,CAALA,KAAK,CAAEC,IAAI,CAAJA,IAAI,CAAEC,IAAI,CAAJA,IAAI,CAAEe,CAAC,CAADA,CAAC,CAAEC,CAAC,CAADA,CAAE,CAAC,CAAC,CAC9D,CAAC,CAEDqB,WAAW,CAAE,SAAAA,YAAUxC,QAAQ,CAAEuB,MAAM,CAAEf,eAAe,CAAE,KAAAiC,MAAA,MACxD,GAAM,CAAAC,SAAS,CAAG,IAAI,CAACpB,eAAe,CAAC,CACrCF,iBAAiB,CAAEpB,QAAQ,CAC3BuB,MAAM,CAANA,MACF,CAAC,CAAC,CAEF,GAAImB,SAAS,CAAE,MAAO,MAAK,CAE3B,GAAM,CAAAC,MAAM,CAAGlD,SAAS,CAACO,QAAQ,CAAEuB,MAAM,CAAC,CAC1C,GAAM,CAAAb,KAAK,CAAGiC,MAAM,CAACX,MAAM,CACzB,SAACC,GAAG,CAAEC,CAAC,QACJ,CAAAD,GAAG,IAAArB,MAAA,CAAAC,kBAAA,CACCoB,GAAG,EAAApB,kBAAA,CACH4B,MAAI,CAACpC,aAAa,CAAA8B,aAAA,EACnBnC,QAAQ,CAARA,QAAQ,CACRQ,eAAe,CAAfA,eAAe,EACZ0B,CAAC,EACJ,EACH,EAAC,CACJ,EAAE,CACH,CAED,MAAO,CAACQ,SAAS,EAAIhC,KAAK,CAACkC,MAAM,GAAK,CAAC,CACzC,CAAC,CAEDC,oBAAoB,CAAE,SAAAA,qBAAU7C,QAAQ,CAAE,CACxC,GAAM,CAAA2C,MAAM,CAAG3C,QAAQ,CAACgC,MAAM,CAC5B,SAACC,GAAG,CAAE/B,IAAI,QAAM,CAAA+B,GAAG,IAAArB,MAAA,CAAAC,kBAAA,CAAOoB,GAAG,EAAApB,kBAAA,CAAKX,IAAI,CAAC4C,MAAM,CAAC,SAAC5B,CAAC,QAAK,CAAAA,CAAC,GAAC,EAAC,EAAC,CACzD,EAAE,CACH,CAED;AACA,GAAIyB,MAAM,CAACC,MAAM,GAAK,CAAC,CAAE,MAAO,KAAI,CAEpC;AACA;AACA,GACED,MAAM,CAACC,MAAM,GAAK,CAAC,EACnBD,MAAM,CAACP,IAAI,CAAC,SAACF,CAAC,QAAK,CAAAA,CAAC,CAAC9B,QAAQ,CAAC,GAAG,CAAC,EAAI8B,CAAC,CAAC9B,QAAQ,CAAC,GAAG,CAAC,GAAC,CAEtD,MAAO,KAAI,CAEb;AACA,GACEuC,MAAM,CAACC,MAAM,GAAK,CAAC,EACnBD,MAAM,CAACI,KAAK,CAAC,SAACb,CAAC,QAAK,CAAAA,CAAC,CAAC9B,QAAQ,CAAC,GAAG,CAAC,EAAI8B,CAAC,CAAC9B,QAAQ,CAAC,GAAG,CAAC,GAAC,EACvD,GAAI,CAAA4C,GAAG,CAACL,MAAM,CAAC,CAACM,IAAI,GAAK,CAAC,EAC1BlE,iBAAiB,CACfC,eAAe,CAACgB,QAAQ,CAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAClChB,eAAe,CAACgB,QAAQ,CAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CACnC,CAED,MAAO,KAAI,CAEb,MAAO,MAAK,CACd,CAAC,CAEDkD,WAAW,CAAE,SAAAA,YAAUlD,QAAQ,CAAEuB,MAAM,CAAEf,eAAe,CAAE,KAAA2C,MAAA,MACxD,GAAM,CAAAT,SAAS,CAAG,IAAI,CAACpB,eAAe,CAAC,CACrCF,iBAAiB,CAAEpB,QAAQ,CAC3BuB,MAAM,CAANA,MACF,CAAC,CAAC,CAEF,GAAI,CAACmB,SAAS,CAAE,MAAO,MAAK,CAE5B,GAAM,CAAAC,MAAM,CAAGlD,SAAS,CAACO,QAAQ,CAAEuB,MAAM,CAAC,CAC1C,GAAM,CAAAb,KAAK,CAAGiC,MAAM,CAACX,MAAM,CACzB,SAACC,GAAG,CAAEC,CAAC,QACJ,CAAAD,GAAG,IAAArB,MAAA,CAAAC,kBAAA,CACCoB,GAAG,EAAApB,kBAAA,CACHsC,MAAI,CAAC9C,aAAa,CAAA8B,aAAA,EACnBnC,QAAQ,CAARA,QAAQ,CACRQ,eAAe,CAAfA,eAAe,EACZ0B,CAAC,EACJ,EACH,EAAC,CACJ,EAAE,CACH,CAED,MAAO,CAAAQ,SAAS,EAAIhC,KAAK,CAACkC,MAAM,GAAK,CAAC,CACxC,CACF,CAAC,CAED,cAAe,CAAA/C,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}